{
	"info": {
		"_postman_id": "825b4e54-c9f9-4911-85d0-5bf781599773",
		"name": "Team2_API Commandos",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "UserLogin",
			"item": [
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae8d7c71-2e67-4086-a1c3-8d097bb3f7c6",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const userLoginEmailId = pm.variables.get(\"userLoginEmailId\");\r",
									"const password = pm.variables.get(\"password\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"Admin login with valid credentials\") {\r",
									"        \r",
									"        bodyData = pm.response.json();\r",
									"        TokenValue = bodyData.token;\r",
									"        console.log(\"Token: \" + TokenValue);\r",
									"        pm.globals.set(\"token\", TokenValue);\r",
									"        commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"        commonTests.checkResponseTime();  \r",
									"        commonTests.checkResponseHeader();\r",
									"        commonTests.checkResponseHasBody();   \r",
									"        commonTests.loginPostSchemaValidation();   \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e2cc25f0-8b69-4f7b-a56c-0ccb258faf19",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "99e98d1a-47f8-4cb2-a68d-52d6fb21ea6e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userLoginEmailId\": \"{{userLoginEmailId}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": []
				}
			],
			"id": "78a5a10a-0320-4691-8e87-64811f4b321b"
		},
		{
			"name": "Program",
			"item": [
				{
					"name": "Create Program with valid Authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72b68a08-9e1e-4d6c-88c8-8b95b1a978cd",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedErrorMessage = pm.variables.get(\"expectedErrorMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const programDescription = pm.variables.get(\"programDescription\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const programStatus = pm.variables.get(\"programStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if ((scenario === \"create program with valid data first program\") || (scenario === \"create program with valid data second program\")) { \r",
									"\r",
									"let bodyData = pm.response.json();\r",
									"\r",
									"let pgrmId = bodyData.programId;\r",
									"let pgrmName = bodyData.programName;\r",
									"\r",
									"//To add the batch ids to an array\r",
									"var programIDs = pm.collectionVariables.get(\"programIDs\");\r",
									"    if (!programIDs) {\r",
									"        programIDs = [];\r",
									"    } else {\r",
									"        programIDs = JSON.parse(programIDs);\r",
									"    }\r",
									"\r",
									"    programIDs.push(pgrmId);    \r",
									"    pm.collectionVariables.set(\"programIDs\", JSON.stringify(programIDs));\r",
									"\r",
									"    var programNames = pm.collectionVariables.get(\"programNames\");\r",
									"    if (!programNames) {\r",
									"        programNames = [];\r",
									"    } else {\r",
									"        programNames = JSON.parse(programNames);\r",
									"    }\r",
									"    \r",
									"    programNames.push(pgrmName);    \r",
									"    pm.collectionVariables.set(\"programNames\", JSON.stringify(programNames));\r",
									"    //Storing the batchIds as local variable to use in consecutive operations\r",
									"    if (programIDs.length === 1) {\r",
									"        pm.collectionVariables.set(\"ProgramId1\", pgrmId); \r",
									"        pm.collectionVariables.set(\"ProgramName1\", pgrmName); \r",
									"        console.log(\"ProgramId1:\"+pgrmId);\r",
									"        console.log(\"ProgramName1:\"+pgrmName);\r",
									"    }   else if (programIDs.length === 2) {\r",
									"        let ProgramId2 = pgrmId;\r",
									"        pm.collectionVariables.set(\"ProgramId2\", pgrmId);\r",
									"        pm.collectionVariables.set(\"ProgramName2\", pgrmName); \r",
									"        console.log(\"ProgramId2:\" + pgrmId);\r",
									"        console.log(\"ProgramName2:\" + pgrmName);\r",
									"    }\r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.ProgramDataValidation(programName, programDescription, programStatus);\r",
									"    commonTests.programPostPutSchemaValidation();\r",
									"}\r",
									"// } else if ((scenario === \"create program with existing program\") || (scenario === \"create program without Authorization\") || (scenario === \"create program with no value in status\") || (scenario === \"create program with no value in program name\") || (scenario === \"create program with interger value in program name\") || (scenario === \"create program with invalid baseurl\") || (scenario === \"create program with invalid endpoint\") || (scenario === \"create program with already existing program\") || (scenario === \"create program with no values in all fields\")) {\r",
									"//         commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"//         commonTests.checkResponseTime();        \r",
									"// } else {\r",
									"//     commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"//     commonTests.checkResponseTime();\r",
									"//     commonTests.checkResponseHeader();\r",
									"//     commonTests.checkResponseHasBody();\r",
									"//     commonTests.checkErrorMsg(expectedErrorMessage, expectedResponseStatus);    \r",
									"// }\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a18c166-b99a-45cb-9c01-4c3c113f8dad",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "796af140-32f6-469f-b255-2ac6f9db9d95",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"programDescription\": \"{{programDescription}}\",\r\n    \"programName\": \"{{programName}}\",\r\n    \"programStatus\": \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": []
				},
				{
					"name": "Create Program with Invalid Test Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72b68a08-9e1e-4d6c-88c8-8b95b1a978cd",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedErrorMessage = pm.variables.get(\"expectedErrorMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const programDescription = pm.variables.get(\"programDescription\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const programStatus = pm.variables.get(\"programStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if ((scenario === \"create program with existing program\") || (scenario === \"create program without Authorization\") || (scenario === \"create program with no value in status\") || (scenario === \"create program with no value in program name\") || (scenario === \"create program with interger value in program name\") || (scenario === \"create program with invalid baseurl\") || (scenario === \"create program with invalid endpoint\") || (scenario === \"create program with already existing program\") || (scenario === \"create program with no values in all fields\")) {\r",
									"        commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"        commonTests.checkResponseTime();        \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    commonTests.checkErrorMsg(expectedErrorMessage, expectedResponseStatus);    \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a18c166-b99a-45cb-9c01-4c3c113f8dad",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "451716ad-0a77-48c0-b84b-53feb82f6762",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"programDescription\": \"{{programDescription}}\",\r\n    \"programName\": \"{{programName}}\",\r\n    \"programStatus\": \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": []
				},
				{
					"name": "Get All Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cb86cbf-dbea-455e-88ad-7fe8cbd20a01",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHasBody()\r",
									"\r",
									"    if ((scenario === \"Get All Program without Authorization\")) { \r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    }else{\r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHasBody()\r",
									"\r",
									"    }\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "089e5c4d-4197-46b1-b92b-d74e68973d68",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": []
				},
				{
					"name": "Get All program with user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59e9f31c-4e90-41f4-9201-d7c016e8d5ad",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"    // commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    // commonTests.checkResponseTime();\r",
									"    // commonTests.checkResponseHasBody()\r",
									"\r",
									"       if (scenario === \"Get All program with user without Authorization\") { \r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    }else{\r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHasBody()\r",
									"\r",
									"    }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "079f018e-4ec7-451b-aef6-d3d7323391d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": []
				},
				{
					"name": "Get Program By ProgramId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0705c7bd-13cc-40c5-b970-4f0cc106075c",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedErrorMessage = pm.variables.get(\"expectedErrorMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const programDescription = pm.variables.get(\"programDescription\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const programStatus = pm.variables.get(\"programStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"    if (scenario === \"Get Program By ProgramId with valid endpoint\"){ \r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.ProgramDataValidation(programName, programDescription, programStatus);\r",
									"    commonTests.programPostPutSchemaValidation();\r",
									"\r",
									"    }else if(scenario === \"Get Program By ProgramId without Authorization\"){\r",
									"\r",
									"        commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"        commonTests.checkResponseTime();\r",
									"\r",
									"    }else{\r",
									"        commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"        commonTests.checkResponseTime();\r",
									"        commonTests.checkResponseHasBody();\r",
									"    }\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "67f41d8a-15c9-450b-aba3-3dea31899c1a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": []
				},
				{
					"name": "Update Program By Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "595b59ad-97da-4a76-bb6f-7cddcbfc081c",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const programDescription = pm.variables.get(\"programDescription\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const programStatus = pm.variables.get(\"programStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"\r",
									"\r",
									"if(scenario === \"Update Program with valid program name\"){ \r",
									"    bodyData = pm.response.json();\r",
									"    dPgrmName = bodyData.programName,\r",
									"    console.log(\"pgrmName1: \" + dPgrmName)\r",
									"    pm.environment.set(\"pgrmName1\", dPgrmName);\r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.ProgramDataValidation(programName, programDescription, programStatus);\r",
									"    commonTests.programPostPutSchemaValidation();\r",
									"}else if(scenario === \"Update Program with Invalid authorization with program name\"){\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ffe752f2-9fd2-4c40-9813-d4484e16e33f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"programDescription\": \"{{programDescription}}\",\r\n  \"programName\": \"{{programName}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": []
				},
				{
					"name": "Update Program by Program Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c7266f6f-2090-4f35-9075-a81620599df5",
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b4f7a9a4-39c1-4776-9591-a9feadf749ee",
								"exec": [
									"\r",
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const programDescription = pm.variables.get(\"programDescription\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const programStatus = pm.variables.get(\"programStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"\r",
									"\r",
									"if(scenario === \"Update Program with valid program Id\"){ \r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.ProgramDataValidation(programName, programDescription, programStatus);\r",
									"    commonTests.programPostPutSchemaValidation();\r",
									"}else if(scenario === \"Update Program with invalid authorization with Id\"){\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "97420715-bc77-4f06-b0e8-0e7dd18bbe06",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"programDescription\": \"{{programDescription}}\",\r\n    \"programName\": \"{{programName}}\",\r\n    \"programStatus\": \"{{programStatus}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": []
				}
			],
			"id": "576af427-1b8e-423c-bff7-dba2125b131f",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "badd6583-ea27-4aeb-bbd0-655c1fb5d256",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"// if(typeof pm.variables.get('requestData') !== 'object')\r",
							"// {\r",
							"//     pm.variables.set('requestData', pm.iterationData.toObject());\r",
							"// }\r",
							"\r",
							"// const requestData = pm.variables.get('requestData');\r",
							"\r",
							"// if(typeof requestData != 'object' || Object.keys(requestData).length === 0)\r",
							"// {\r",
							"//     console.log('No external data provided/data set is empty');\r",
							"//     return;\r",
							"// }\r",
							"\r",
							"// const currentRequest = requestData.requests.filter(({name}) => name === pm.info.requestName)[0];\r",
							"\r",
							"// if(!currentRequest){\r",
							"//     console.log('Request ${pm.info.requestName} has no data.');\r",
							"// }\r",
							"\r",
							"// if(currentRequest){\r",
							"\r",
							"//     const variables = currentRequest.data.shift();\r",
							"\r",
							"//     Object.entries(variables).forEach(([key, value]) => {\r",
							"//         pm.variables.set(key, value);\r",
							"//     });\r",
							"\r",
							"// let baseUrl;\r",
							"\r",
							"// if (variables.scenario.toLowerCase().includes(\"invalid baseurl\")) {\r",
							"//     baseUrl = pm.environment.get(\"invalidBaseURL\");\r",
							"// } else {  \r",
							"//     baseUrl = pm.environment.get(\"baseURL\");\r",
							"// }\r",
							"\r",
							"// const endpoint = variables.endpoint; \r",
							"\r",
							"// let fullURL;\r",
							"\r",
							"// if ((pm.info.requestName=== \"Update Class\") || (pm.info.requestName=== \"Delete Class\")) {\r",
							"//     const classId = pm.environment.get(\"classID\");\r",
							"//     fullURL = baseUrl + endpoint.replace(\"{classId}\", classId);  \r",
							"// } else {\r",
							"//     fullURL = baseUrl + endpoint; \r",
							"// }\r",
							"\r",
							"// //pm.variables.set('url', fullURL); \r",
							"\r",
							"// pm.request.url = fullURL;\r",
							"\r",
							"//     if (variables.includeAuth.toLowerCase() === 'true') {\r",
							"//         const token = pm.globals.get('token');  \r",
							"//         pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });\r",
							"//     } else {\r",
							"//        console.log(\"No Authorization header needed\"); \r",
							"//     }\r",
							"\r",
							"//     pm.variables.set('requestData', requestData);\r",
							"\r",
							"//     if(currentRequest.data.length > 0){\r",
							"//         pm.execution.setNextRequest(pm.info.requestName);\r",
							"//     }\r",
							"// }\t\t\r",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ed1070a2-f428-43bd-bc8a-6312b0a497f1",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ProgramBatch",
			"item": [
				{
					"name": "Create Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82442eeb-30e1-4341-8019-6c63700fe24b",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const batchNoOfClasses = pm.variables.get(\"batchNoOfClasses\");\r",
									"const batchDescription = pm.variables.get(\"batchDescription\");\r",
									"const batchName = pm.variables.get(\"batchName\");\r",
									"const batchStatus = pm.variables.get(\"batchStatus\");\r",
									"const programId = pm.variables.get(\"programId\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									" if(pm.response.status ===\"Created\"){\r",
									"    let bodyData = pm.response.json();\r",
									"     let batchID = bodyData.batchId;\r",
									"     let batchName = bodyData.batchName;\r",
									"\r",
									"    //To add the batch ids to an array\r",
									"    var batchIDs = pm.collectionVariables.get(\"batchIDs\");\r",
									"    if (!batchIDs) {\r",
									"        batchIDs = [];\r",
									"    } else {\r",
									"        batchIDs = JSON.parse(batchIDs);\r",
									"    }\r",
									"    \r",
									"    //Storing the batchIds as local variable to use in consecutive operations\r",
									"    if (batchIDs.length === 0) {\r",
									"        pm.collectionVariables.set(\"batchID1\", batchID);\r",
									"        pm.collectionVariables.set(\"batchName1\", batchName); \r",
									"        console.log(\"batchID1:\" +batchID);\r",
									"    } else if (batchIDs.length === 1) {\r",
									"        let batchID2 = batchID;\r",
									"        pm.collectionVariables.set(\"batchID2\", batchID);\r",
									"        pm.collectionVariables.set(\"batchName2\", batchName); \r",
									"        console.log(\"batchID2:\" +batchID);\r",
									"    }\r",
									"    \r",
									"    batchIDs.push(batchID);    \r",
									"    pm.collectionVariables.set(\"batchIDs\", JSON.stringify(batchIDs));\r",
									"\r",
									"\r",
									"    //To add the batch names to an array\r",
									"    var batchNames = pm.collectionVariables.get(\"batchNames\");\r",
									"    if (!batchNames) {\r",
									"        batchNames = [];\r",
									"    } else {\r",
									"        batchNames = JSON.parse(batchNames);\r",
									"    }    \r",
									"    batchNames.push(batchName);    \r",
									"    pm.collectionVariables.set(\"batchNames\", JSON.stringify(batchNames));\r",
									"\r",
									" }\r",
									" if ((scenario === \"create batch1 with all fields\") || (scenario === \"create batch2 with all fields\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.BatchDataValidation(batchName,batchDescription,batchNoOfClasses,batchStatus,programId,programName);     \r",
									"    commonTests.batchPostPutSchemaValidation();\r",
									"     }\r",
									"    else if((scenario ===\"create batch with mandatory fields\")){\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    }\r",
									" else if((scenario === \"create batch without Authorization\") || (scenario === \"create batch with invalid baseURL\") || (scenario === \"create batch with invalid endpoint\")){\r",
									"      commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"      commonTests.checkResponseTime();        \r",
									" } else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);    \r",
									"}\r",
									"\r",
									"\r",
									"\r",
									" \r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9ab00a45-8209-4bc5-a1ee-55588d119b5e",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "04f23c2a-9795-4f55-8d0b-57df72ff7b70",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": [
						{
							"id": "11e79628-00c7-4948-8936-240cf5046511",
							"name": "Create Batch",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \r\n  \"batchName\": \"APICommandos001\",\r\n  \"batchDescription\": \"zcxvb\",\r\n  \"batchStatus\": \"Active\",\r\n  \"batchNoOfClasses\": 10,\r\n  \"programId\": 16710,\r\n  \"programName\": \"APICommandos\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://lms-hackthon-oct24-3efc7e0df381.herokuapp.com/lms/batches"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1730925590&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=hkdypMk6lAiOTdE6xWnSfHK3zuda7AsQcDbkby4zsK4%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1730925590&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=hkdypMk6lAiOTdE6xWnSfHK3zuda7AsQcDbkby4zsK4%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Nov 2024 20:39:50 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"batchId\": 9044,\n    \"batchName\": \"APICommandos001\",\n    \"batchDescription\": \"zcxvb\",\n    \"batchStatus\": \"Active\",\n    \"batchNoOfClasses\": 10,\n    \"programId\": 16710,\n    \"programName\": \"APICommandos\"\n}"
						}
					]
				},
				{
					"name": "GetAllBatches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee617d48-8f2e-42bd-856f-244c064ffd2a",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHasBody()\r",
									"\r",
									"    if ((scenario === \"get all batches\")) { \r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    }\r",
									"    else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();  \r",
									"    }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ac13d657-bd08-4693-a6ed-8730803d59d9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": [
						{
							"id": "4e19155b-2a5e-49df-aa83-ad7989cd9548",
							"name": "GetAllBatches",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://lms-hackthon-oct24-3efc7e0df381.herokuapp.com/lms/batches"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1730990264&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=yTuk2U6tsHiKmqwCHMxpooIuRdrhTiq%2BL%2BswZPSkxnA%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1730990264&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=yTuk2U6tsHiKmqwCHMxpooIuRdrhTiq%2BL%2BswZPSkxnA%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Nov 2024 14:37:44 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"batchId\": 8694,\n        \"batchName\": \"AAAAAAAAA05\",\n        \"batchDescription\": \"My Test Batch354364\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16449,\n        \"programName\": \"AAAAAAAAA\"\n    },\n    {\n        \"batchId\": 8695,\n        \"batchName\": \"AAAAAAAAA06\",\n        \"batchDescription\": \"AAjava\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16449,\n        \"programName\": \"AAAAAAAAA\"\n    },\n    {\n        \"batchId\": 8696,\n        \"batchName\": \"AAAAAAAAA07\",\n        \"batchDescription\": \"sample07\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 7,\n        \"programId\": 16449,\n        \"programName\": \"AAAAAAAAA\"\n    },\n    {\n        \"batchId\": 8693,\n        \"batchName\": \"AAAAAAAAA4\",\n        \"batchDescription\": \"ddfgfdgf\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16449,\n        \"programName\": \"AAAAAAAAA\"\n    },\n    {\n        \"batchId\": 8937,\n        \"batchName\": \"activa11\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8936,\n        \"batchName\": \"activa12\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8941,\n        \"batchName\": \"activa14\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8942,\n        \"batchName\": \"activa15\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8943,\n        \"batchName\": \"activa19\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8944,\n        \"batchName\": \"activa22\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8945,\n        \"batchName\": \"activa23\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16617,\n        \"programName\": \"activa\"\n    },\n    {\n        \"batchId\": 8994,\n        \"batchName\": \"activaB67\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 23,\n        \"programId\": 16632,\n        \"programName\": \"activaB\"\n    },\n    {\n        \"batchId\": 8890,\n        \"batchName\": \"acvg001\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16550,\n        \"programName\": \"acvg\"\n    },\n    {\n        \"batchId\": 8891,\n        \"batchName\": \"acvg002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16550,\n        \"programName\": \"acvg\"\n    },\n    {\n        \"batchId\": 8750,\n        \"batchName\": \"AngularJS01\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16465,\n        \"programName\": \"AngularJS\"\n    },\n    {\n        \"batchId\": 8751,\n        \"batchName\": \"AngularJS02\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16465,\n        \"programName\": \"AngularJS\"\n    },\n    {\n        \"batchId\": 8752,\n        \"batchName\": \"AngularJS05\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16465,\n        \"programName\": \"AngularJS\"\n    },\n    {\n        \"batchId\": 8753,\n        \"batchName\": \"AngularJS3\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16465,\n        \"programName\": \"AngularJS\"\n    },\n    {\n        \"batchId\": 8754,\n        \"batchName\": \"AngularJS8\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16465,\n        \"programName\": \"AngularJS\"\n    },\n    {\n        \"batchId\": 9053,\n        \"batchName\": \"APIComm123\",\n        \"batchDescription\": \"QWER\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 9044,\n        \"batchName\": \"APICommandos001\",\n        \"batchDescription\": \"zcxvb\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 9052,\n        \"batchName\": \"APICommandos002\",\n        \"batchDescription\": \"ASDe1234\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 9055,\n        \"batchName\": \"APICommandos007\",\n        \"batchDescription\": \" \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 8780,\n        \"batchName\": \"APIpostman2020\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16490,\n        \"programName\": \"basket\"\n    },\n    {\n        \"batchId\": 8783,\n        \"batchName\": \"APIpostman2021\",\n        \"batchDescription\": \"APIdes\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16490,\n        \"programName\": \"basket\"\n    },\n    {\n        \"batchId\": 8784,\n        \"batchName\": \"APIpostman32\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16490,\n        \"programName\": \"basket\"\n    },\n    {\n        \"batchId\": 8562,\n        \"batchName\": \"APIservice150\",\n        \"batchDescription\": \"Postman and restassured\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16297,\n        \"programName\": \"APIservice\"\n    },\n    {\n        \"batchId\": 8557,\n        \"batchName\": \"APIserviceAPI\",\n        \"batchDescription\": \"abcd\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16297,\n        \"programName\": \"APIservice\"\n    },\n    {\n        \"batchId\": 8850,\n        \"batchName\": \"AutomationCodeProl10\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16548,\n        \"programName\": \"AutomationCodeProl\"\n    },\n    {\n        \"batchId\": 8883,\n        \"batchName\": \"AutomationCodeProl6745\",\n        \"batchDescription\": \"automating\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16548,\n        \"programName\": \"AutomationCodeProl\"\n    },\n    {\n        \"batchId\": 8849,\n        \"batchName\": \"AutomationCodeProl9\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16548,\n        \"programName\": \"AutomationCodeProl\"\n    },\n    {\n        \"batchId\": 8848,\n        \"batchName\": \"AutomationCodeProl99\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16548,\n        \"programName\": \"AutomationCodeProl\"\n    },\n    {\n        \"batchId\": 8663,\n        \"batchName\": \"AutomationTesting005\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16385,\n        \"programName\": \"AutomationTesting\"\n    },\n    {\n        \"batchId\": 8665,\n        \"batchName\": \"AutomationTesting012\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16385,\n        \"programName\": \"AutomationTesting\"\n    },\n    {\n        \"batchId\": 8662,\n        \"batchName\": \"AutomationTesting12\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16385,\n        \"programName\": \"AutomationTesting\"\n    },\n    {\n        \"batchId\": 8666,\n        \"batchName\": \"AutomationTesting121\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16385,\n        \"programName\": \"AutomationTesting\"\n    },\n    {\n        \"batchId\": 8664,\n        \"batchName\": \"AutomationTesting15\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16385,\n        \"programName\": \"AutomationTesting\"\n    },\n    {\n        \"batchId\": 8759,\n        \"batchName\": \"AWSPath304\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16466,\n        \"programName\": \"AWSPath\"\n    },\n    {\n        \"batchId\": 8760,\n        \"batchName\": \"AWSPath305\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16466,\n        \"programName\": \"AWSPath\"\n    },\n    {\n        \"batchId\": 8769,\n        \"batchName\": \"AWSPath306\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16466,\n        \"programName\": \"AWSPath\"\n    },\n    {\n        \"batchId\": 8748,\n        \"batchName\": \"AXDS001\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16464,\n        \"programName\": \"Hundred\"\n    },\n    {\n        \"batchId\": 8558,\n        \"batchName\": \"AzureP100\",\n        \"batchDescription\": \"Azure Batchafsfw364\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16300,\n        \"programName\": \"AzurePjavasdet\"\n    },\n    {\n        \"batchId\": 8574,\n        \"batchName\": \"AzureP25\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16300,\n        \"programName\": \"AzurePjavasdet\"\n    },\n    {\n        \"batchId\": 8575,\n        \"batchName\": \"AzureP26\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16300,\n        \"programName\": \"AzurePjavasdet\"\n    },\n    {\n        \"batchId\": 8576,\n        \"batchName\": \"AzureP27\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16300,\n        \"programName\": \"AzurePjavasdet\"\n    },\n    {\n        \"batchId\": 8600,\n        \"batchName\": \"AzureP55\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16300,\n        \"programName\": \"AzurePjavasdet\"\n    },\n    {\n        \"batchId\": 8567,\n        \"batchName\": \"AzureP999\",\n        \"batchDescription\": \"Azure 999 batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16300,\n        \"programName\": \"AzurePjavasdet\"\n    },\n    {\n        \"batchId\": 8959,\n        \"batchName\": \"bajajCode25\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8960,\n        \"batchName\": \"bajajCode26\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8966,\n        \"batchName\": \"bajajCode27\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8976,\n        \"batchName\": \"bajajCode28\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8977,\n        \"batchName\": \"bajajCode29\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8983,\n        \"batchName\": \"bajajCode32\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8984,\n        \"batchName\": \"bajajCode33\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8985,\n        \"batchName\": \"bajajCode35\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8986,\n        \"batchName\": \"bajajCode36\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8992,\n        \"batchName\": \"bajajCode41\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8993,\n        \"batchName\": \"bajajCode42\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 8989,\n        \"batchName\": \"bajajCode78\",\n        \"batchDescription\": \"bajajCode\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 67,\n        \"programId\": 16633,\n        \"programName\": \"bajajCode\"\n    },\n    {\n        \"batchId\": 9036,\n        \"batchName\": \"batchNameAC\",\n        \"batchDescription\": \"Batch Description ac\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16703,\n        \"programName\": \"ProgramNamea\"\n    },\n    {\n        \"batchId\": 9071,\n        \"batchName\": \"BugBusters100\",\n        \"batchDescription\": \"BugBusters Mathu batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16766,\n        \"programName\": \"BugBustersMathu\"\n    },\n    {\n        \"batchId\": 9072,\n        \"batchName\": \"BugBusters200\",\n        \"batchDescription\": \"BugBusters Mathu batch second\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16766,\n        \"programName\": \"BugBustersMathu\"\n    },\n    {\n        \"batchId\": 8506,\n        \"batchName\": \"chat\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8508,\n        \"batchName\": \"chatbotdev001\",\n        \"batchDescription\": \"Batch 03\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16241,\n        \"programName\": \"chatbotdev\"\n    },\n    {\n        \"batchId\": 8569,\n        \"batchName\": \"chatbotdev100\",\n        \"batchDescription\": \"chatbot\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16241,\n        \"programName\": \"chatbotdev\"\n    },\n    {\n        \"batchId\": 8544,\n        \"batchName\": \"ChatBotTest1\",\n        \"batchDescription\": \"ChatBotTest Morning Bat\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8604,\n        \"batchName\": \"ChatBotTest10\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8605,\n        \"batchName\": \"ChatBotTest11\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8606,\n        \"batchName\": \"ChatBotTest12\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8549,\n        \"batchName\": \"ChatBotTest2\",\n        \"batchDescription\": \"trainig for eve batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8598,\n        \"batchName\": \"ChatBotTest4\",\n        \"batchDescription\": \"vhjh\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8602,\n        \"batchName\": \"ChatBotTest5\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8603,\n        \"batchName\": \"ChatBotTest6\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16284,\n        \"programName\": \"ChatBotTest\"\n    },\n    {\n        \"batchId\": 8639,\n        \"batchName\": \"ChatBotTestuk123\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8640,\n        \"batchName\": \"ChatBotTestuk127\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8641,\n        \"batchName\": \"ChatBotTestuk130\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8642,\n        \"batchName\": \"ChatBotTestuk132\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8615,\n        \"batchName\": \"ChatBotTestuk15\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8614,\n        \"batchName\": \"ChatBotTestuk3\",\n        \"batchDescription\": \"vcxvb\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8637,\n        \"batchName\": \"ChatBotTestuk4201\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8636,\n        \"batchName\": \"ChatBotTestuk509\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8638,\n        \"batchName\": \"ChatBotTestuk601\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8633,\n        \"batchName\": \"ChatBotTestuk701\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8632,\n        \"batchName\": \"ChatBotTestuk801\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16328,\n        \"programName\": \"ChatBotTestuk\"\n    },\n    {\n        \"batchId\": 8789,\n        \"batchName\": \"CoreJava112\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16438,\n        \"programName\": \"CoreJava\"\n    },\n    {\n        \"batchId\": 8685,\n        \"batchName\": \"CoreJava123\",\n        \"batchDescription\": \"aassssssssss\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16438,\n        \"programName\": \"CoreJava\"\n    },\n    {\n        \"batchId\": 8788,\n        \"batchName\": \"CoreJava345\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16438,\n        \"programName\": \"CoreJava\"\n    },\n    {\n        \"batchId\": 9048,\n        \"batchName\": \"DA\",\n        \"batchDescription\": \"DA86\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 86,\n        \"programId\": 16713,\n        \"programName\": \"DataAnalysis\"\n    },\n    {\n        \"batchId\": 8449,\n        \"batchName\": \"DA01\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 15,\n        \"programId\": 16223,\n        \"programName\": \"Springbootcorejavar\"\n    },\n    {\n        \"batchId\": 8450,\n        \"batchName\": \"DA 05\",\n        \"batchDescription\": \"DA desc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16223,\n        \"programName\": \"Springbootcorejavar\"\n    },\n    {\n        \"batchId\": 8810,\n        \"batchName\": \"Dhavan005\",\n        \"batchDescription\": \"asdd\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16504,\n        \"programName\": \"Dhavan\"\n    },\n    {\n        \"batchId\": 8809,\n        \"batchName\": \"Dhavan12\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16504,\n        \"programName\": \"Dhavan\"\n    },\n    {\n        \"batchId\": 8808,\n        \"batchName\": \"Dhavan1223\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16504,\n        \"programName\": \"Dhavan\"\n    },\n    {\n        \"batchId\": 8807,\n        \"batchName\": \"Dhavan200\",\n        \"batchDescription\": \"asdd\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16504,\n        \"programName\": \"Dhavan\"\n    },\n    {\n        \"batchId\": 8796,\n        \"batchName\": \"dshdjshjdhsdj02\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16484,\n        \"programName\": \"dshdjshjdhsdj\"\n    },\n    {\n        \"batchId\": 8432,\n        \"batchName\": \"DVLPR-0001\",\n        \"batchDescription\": \"Java Developer\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16208,\n        \"programName\": \"DVLPR\"\n    },\n    {\n        \"batchId\": 8451,\n        \"batchName\": \"DVLPR02\",\n        \"batchDescription\": \"Full Stack Developer\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16208,\n        \"programName\": \"DVLPR\"\n    },\n    {\n        \"batchId\": 8507,\n        \"batchName\": \"DVLPR06\",\n        \"batchDescription\": \"DataScience BATCH 01\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16208,\n        \"programName\": \"DVLPR\"\n    },\n    {\n        \"batchId\": 8678,\n        \"batchName\": \"EDGE1234\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16411,\n        \"programName\": \"EDGEEdited\"\n    },\n    {\n        \"batchId\": 8682,\n        \"batchName\": \"EDGE222\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16411,\n        \"programName\": \"EDGEEdited\"\n    },\n    {\n        \"batchId\": 8681,\n        \"batchName\": \"EDGE45678\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16411,\n        \"programName\": \"EDGEEdited\"\n    },\n    {\n        \"batchId\": 8680,\n        \"batchName\": \"EDGE7766\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16411,\n        \"programName\": \"EDGEEdited\"\n    },\n    {\n        \"batchId\": 8679,\n        \"batchName\": \"EDGE9087\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16411,\n        \"programName\": \"EDGEEdited\"\n    },\n    {\n        \"batchId\": 8747,\n        \"batchName\": \"EDGEEdited1\",\n        \"batchDescription\": \"xzx\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16411,\n        \"programName\": \"EDGEEdited\"\n    },\n    {\n        \"batchId\": 8939,\n        \"batchName\": \"EditedData12\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16563,\n        \"programName\": \"EditedData\"\n    },\n    {\n        \"batchId\": 8834,\n        \"batchName\": \"england561\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16534,\n        \"programName\": \"england\"\n    },\n    {\n        \"batchId\": 8987,\n        \"batchName\": \"etrte\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16655,\n        \"programName\": \"etr\"\n    },\n    {\n        \"batchId\": 8594,\n        \"batchName\": \"ExcelAdvancedSDET128\",\n        \"batchDescription\": \"Gained knowledge on functional and non functional testing\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 30,\n        \"programId\": 16355,\n        \"programName\": \"FourtySix\"\n    },\n    {\n        \"batchId\": 8649,\n        \"batchName\": \"ExcelAdvancedTwo01\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16356,\n        \"programName\": \"ExcelAdvancedTwo\"\n    },\n    {\n        \"batchId\": 8654,\n        \"batchName\": \"ExcelAdvancedTwo02\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16356,\n        \"programName\": \"ExcelAdvancedTwo\"\n    },\n    {\n        \"batchId\": 8596,\n        \"batchName\": \"ExcelAdvancedTwoSDET159\",\n        \"batchDescription\": \"Gained knowledge on functional and non functional testing\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 30,\n        \"programId\": 16356,\n        \"programName\": \"ExcelAdvancedTwo\"\n    },\n    {\n        \"batchId\": 8964,\n        \"batchName\": \"FiftyTwoDLFKW40\",\n        \"batchDescription\": \"this is test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16626,\n        \"programName\": \"FiftyTwoDLFKW\"\n    },\n    {\n        \"batchId\": 8963,\n        \"batchName\": \"FiftyTwoDLFKW67\",\n        \"batchDescription\": \"TestDescription\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16626,\n        \"programName\": \"FiftyTwoDLFKW\"\n    },\n    {\n        \"batchId\": 8973,\n        \"batchName\": \"FiftyTwoMSRWE1238\",\n        \"batchDescription\": \"TestDescription\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16628,\n        \"programName\": \"FiftyTwoMSRWE\"\n    },\n    {\n        \"batchId\": 8972,\n        \"batchName\": \"FiftyTwoMSRWE79995\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16628,\n        \"programName\": \"FiftyTwoMSRWE\"\n    },\n    {\n        \"batchId\": 8974,\n        \"batchName\": \"FiftyTwoMSRWEText\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16628,\n        \"programName\": \"FiftyTwoMSRWE\"\n    },\n    {\n        \"batchId\": 8935,\n        \"batchName\": \"FiftyTwoQYCUM651\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16593,\n        \"programName\": \"FiftyTwoQYCUM\"\n    },\n    {\n        \"batchId\": 8991,\n        \"batchName\": \"fourtoBatch\",\n        \"batchDescription\": \"dgftyry\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16659,\n        \"programName\": \"fourto\"\n    },\n    {\n        \"batchId\": 8869,\n        \"batchName\": \"Framework101\",\n        \"batchDescription\": \"Framework intermediate to advance\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16578,\n        \"programName\": \"Framework\"\n    },\n    {\n        \"batchId\": 8687,\n        \"batchName\": \"GGDG1121730083369281\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16443,\n        \"programName\": \"ProgVJNameEditedaEdited\"\n    },\n    {\n        \"batchId\": 8688,\n        \"batchName\": \"GGDG33713\",\n        \"batchDescription\": \"Valid batch description\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16443,\n        \"programName\": \"ProgVJNameEditedaEdited\"\n    },\n    {\n        \"batchId\": 8719,\n        \"batchName\": \"Github1\",\n        \"batchDescription\": \"zzzz\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16410,\n        \"programName\": \"LMSTeamfivesss\"\n    },\n    {\n        \"batchId\": 8659,\n        \"batchName\": \"Github128\",\n        \"batchDescription\": \"SAMPLE\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16410,\n        \"programName\": \"LMSTeamfivesss\"\n    },\n    {\n        \"batchId\": 8499,\n        \"batchName\": \"Grading01\",\n        \"batchDescription\": \"TestingGrading\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16238,\n        \"programName\": \"Grading\"\n    },\n    {\n        \"batchId\": 8616,\n        \"batchName\": \"graph1111\",\n        \"batchDescription\": \"aaa\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16295,\n        \"programName\": \"graph\"\n    },\n    {\n        \"batchId\": 8618,\n        \"batchName\": \"graph11113\",\n        \"batchDescription\": \"ssssss\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16295,\n        \"programName\": \"graph\"\n    },\n    {\n        \"batchId\": 8617,\n        \"batchName\": \"graph1112\",\n        \"batchDescription\": \"aaaa\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16295,\n        \"programName\": \"graph\"\n    },\n    {\n        \"batchId\": 8793,\n        \"batchName\": \"Hundred02\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16464,\n        \"programName\": \"Hundred\"\n    },\n    {\n        \"batchId\": 8924,\n        \"batchName\": \"IAS01\",\n        \"batchDescription\": \"course\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16591,\n        \"programName\": \"IAS\"\n    },\n    {\n        \"batchId\": 8797,\n        \"batchName\": \"InformationTechPath002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16498,\n        \"programName\": \"InformationTechPath\"\n    },\n    {\n        \"batchId\": 8800,\n        \"batchName\": \"InformationTechPath003\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16498,\n        \"programName\": \"InformationTechPath\"\n    },\n    {\n        \"batchId\": 8801,\n        \"batchName\": \"InformationTechPath200\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16498,\n        \"programName\": \"InformationTechPath\"\n    },\n    {\n        \"batchId\": 8791,\n        \"batchName\": \"InformationTechPath319\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16498,\n        \"programName\": \"InformationTechPath\"\n    },\n    {\n        \"batchId\": 8792,\n        \"batchName\": \"InformationTechPath320\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16498,\n        \"programName\": \"InformationTechPath\"\n    },\n    {\n        \"batchId\": 8925,\n        \"batchName\": \"IPS50\",\n        \"batchDescription\": \"Training\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16594,\n        \"programName\": \"IPS\"\n    },\n    {\n        \"batchId\": 8773,\n        \"batchName\": \"ITPath308\",\n        \"batchDescription\": \"NewBatchDescriptionByMathu\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8774,\n        \"batchName\": \"ITPath311\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8775,\n        \"batchName\": \"ITPath312\",\n        \"batchDescription\": \"Java class\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 50,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8777,\n        \"batchName\": \"ITPath313\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8778,\n        \"batchName\": \"ITPath314\",\n        \"batchDescription\": \"BDD Automation1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8781,\n        \"batchName\": \"ITPath315\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8782,\n        \"batchName\": \"ITPath316\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16474,\n        \"programName\": \"ITPath\"\n    },\n    {\n        \"batchId\": 8497,\n        \"batchName\": \"Java-008\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8498,\n        \"batchName\": \"Java-009\",\n        \"batchDescription\": \" \",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8504,\n        \"batchName\": \"java-198\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8503,\n        \"batchName\": \"java-199\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8502,\n        \"batchName\": \"java-200\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8500,\n        \"batchName\": \"Java-201\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8501,\n        \"batchName\": \"Java-202\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8505,\n        \"batchName\": \"Java2562\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 11,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 9054,\n        \"batchName\": \"Java-basics\",\n        \"batchDescription\": \"Introduction to Java programming covering fundamentals and basic concepts.\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 20,\n        \"programId\": 16733,\n        \"programName\": \"API-Ninjas\"\n    },\n    {\n        \"batchId\": 9069,\n        \"batchName\": \"Java-basics\",\n        \"batchDescription\": \"Introduction to Java programming covering fundamentals and basic concepts.\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 20,\n        \"programId\": 16740,\n        \"programName\": \"APINinjas\"\n    },\n    {\n        \"batchId\": 8444,\n        \"batchName\": \"Java Batch 01\",\n        \"batchDescription\": \"Java Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16208,\n        \"programName\": \"DVLPR\"\n    },\n    {\n        \"batchId\": 8814,\n        \"batchName\": \"Javadoc002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16508,\n        \"programName\": \"Javadoc\"\n    },\n    {\n        \"batchId\": 8821,\n        \"batchName\": \"Javadoca002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16513,\n        \"programName\": \"Javadoca\"\n    },\n    {\n        \"batchId\": 8815,\n        \"batchName\": \"Javadocs002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16509,\n        \"programName\": \"Javadocs\"\n    },\n    {\n        \"batchId\": 8816,\n        \"batchName\": \"Javadocs07\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16509,\n        \"programName\": \"Javadocs\"\n    },\n    {\n        \"batchId\": 8556,\n        \"batchName\": \"JavaLanguagea12\",\n        \"batchDescription\": \"ressupdated\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16226,\n        \"programName\": \"JavaLanguageh\"\n    },\n    {\n        \"batchId\": 8545,\n        \"batchName\": \"Java-Program003\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16213,\n        \"programName\": \"JavaProgram\"\n    },\n    {\n        \"batchId\": 8550,\n        \"batchName\": \"Java-Program01\",\n        \"batchDescription\": \"SDET\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16213,\n        \"programName\": \"JavaProgram\"\n    },\n    {\n        \"batchId\": 8547,\n        \"batchName\": \"Java-Program1\",\n        \"batchDescription\": \"New Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16213,\n        \"programName\": \"JavaProgram\"\n    },\n    {\n        \"batchId\": 8825,\n        \"batchName\": \"javascriptBasic7\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16530,\n        \"programName\": \"javascriptBasic\"\n    },\n    {\n        \"batchId\": 8689,\n        \"batchName\": \"JayDelete1121730084645274\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16406,\n        \"programName\": \"JayDelete\"\n    },\n    {\n        \"batchId\": 8690,\n        \"batchName\": \"JayDelete21915\",\n        \"batchDescription\": \"Valid batch description\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16406,\n        \"programName\": \"JayDelete\"\n    },\n    {\n        \"batchId\": 9004,\n        \"batchName\": \"jbYannpW20061\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16668,\n        \"programName\": \"jbYannpW\"\n    },\n    {\n        \"batchId\": 9002,\n        \"batchName\": \"jbYannpW50267\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16668,\n        \"programName\": \"jbYannpW\"\n    },\n    {\n        \"batchId\": 9003,\n        \"batchName\": \"jbYannpW53539\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16668,\n        \"programName\": \"jbYannpW\"\n    },\n    {\n        \"batchId\": 9001,\n        \"batchName\": \"jbYannpW64925\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16668,\n        \"programName\": \"jbYannpW\"\n    },\n    {\n        \"batchId\": 8828,\n        \"batchName\": \"JDBS001\",\n        \"batchDescription\": \"test3\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16533,\n        \"programName\": \"JDBS\"\n    },\n    {\n        \"batchId\": 8673,\n        \"batchName\": \"JENKINS111\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8658,\n        \"batchName\": \"JENKINS128\",\n        \"batchDescription\": \"Team8\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8670,\n        \"batchName\": \"JENKINS199\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8671,\n        \"batchName\": \"JENKINS200\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8672,\n        \"batchName\": \"JENKINS3445\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8675,\n        \"batchName\": \"JENKINS345\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8674,\n        \"batchName\": \"JENKINS505\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8676,\n        \"batchName\": \"JENKINS56843\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8677,\n        \"batchName\": \"JENKINS987\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16409,\n        \"programName\": \"JENKINS\"\n    },\n    {\n        \"batchId\": 8958,\n        \"batchName\": \"JofARMA776\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16615,\n        \"programName\": \"JofARMA\"\n    },\n    {\n        \"batchId\": 8489,\n        \"batchName\": \"Jul-SDET\",\n        \"batchDescription\": \"SDET jul has 5 member.\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16230,\n        \"programName\": \"OOPS\"\n    },\n    {\n        \"batchId\": 8667,\n        \"batchName\": \"keyword05\",\n        \"batchDescription\": \"sample\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16404,\n        \"programName\": \"keyword\"\n    },\n    {\n        \"batchId\": 8668,\n        \"batchName\": \"keyword06\",\n        \"batchDescription\": \"sample\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16404,\n        \"programName\": \"keyword\"\n    },\n    {\n        \"batchId\": 8669,\n        \"batchName\": \"keyword07\",\n        \"batchDescription\": \"sample07\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 7,\n        \"programId\": 16404,\n        \"programName\": \"keyword\"\n    },\n    {\n        \"batchId\": 8772,\n        \"batchName\": \"kokok893\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16439,\n        \"programName\": \"kokok\"\n    },\n    {\n        \"batchId\": 8988,\n        \"batchName\": \"Lamda001\",\n        \"batchDescription\": \"Java\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16656,\n        \"programName\": \"Lamda\"\n    },\n    {\n        \"batchId\": 8990,\n        \"batchName\": \"Lamda10\",\n        \"batchDescription\": \"lamba\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16656,\n        \"programName\": \"Lamda\"\n    },\n    {\n        \"batchId\": 8564,\n        \"batchName\": \"LearnNewTech23\",\n        \"batchDescription\": \"new tech\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16239,\n        \"programName\": \"LearnNewTech\"\n    },\n    {\n        \"batchId\": 8744,\n        \"batchName\": \"LeelaLMSEighteen130\",\n        \"batchDescription\": \"FiftyOne\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16462,\n        \"programName\": \"AzurePath\"\n    },\n    {\n        \"batchId\": 8859,\n        \"batchName\": \"LeelaLMSOneDup002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16554,\n        \"programName\": \"LeelaLMSOneDup\"\n    },\n    {\n        \"batchId\": 8770,\n        \"batchName\": \"LeelaLMSSixteen877\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16456,\n        \"programName\": \"LeelaLMSSixteen\"\n    },\n    {\n        \"batchId\": 8876,\n        \"batchName\": \"LeelaLMSThreeDupDupDup001\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16558,\n        \"programName\": \"LeelaLMSThreeDupDupDup\"\n    },\n    {\n        \"batchId\": 8877,\n        \"batchName\": \"LeelaLMSThreeDupDupDup002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16558,\n        \"programName\": \"LeelaLMSThreeDupDupDup\"\n    },\n    {\n        \"batchId\": 8863,\n        \"batchName\": \"LeelaLMSTwoDupDup0022\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16556,\n        \"programName\": \"LeelaLMSTwoDupDup\"\n    },\n    {\n        \"batchId\": 8854,\n        \"batchName\": \"LeelaLMSTwoDupDupDup1121730163902287\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16557,\n        \"programName\": \"LeelaLMSTwoDupDupDup\"\n    },\n    {\n        \"batchId\": 8855,\n        \"batchName\": \"LeelaLMSTwoDupDupDup36035\",\n        \"batchDescription\": \"PlayWrightAuto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 28,\n        \"programId\": 16557,\n        \"programName\": \"LeelaLMSTwoDupDupDup\"\n    },\n    {\n        \"batchId\": 8864,\n        \"batchName\": \"LeelaLMSTwoDupDupText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16556,\n        \"programName\": \"LeelaLMSTwoDupDup\"\n    },\n    {\n        \"batchId\": 8620,\n        \"batchName\": \"LMSHackathcc1111\",\n        \"batchDescription\": \"aaaa\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16359,\n        \"programName\": \"LMSHackathcc\"\n    },\n    {\n        \"batchId\": 8601,\n        \"batchName\": \"LMSHackathonwwww5\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16359,\n        \"programName\": \"LMSHackathcc\"\n    },\n    {\n        \"batchId\": 8563,\n        \"batchName\": \"LMSJavaSelenium150\",\n        \"batchDescription\": \"sdf\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 15,\n        \"programId\": 16278,\n        \"programName\": \"Selenium\"\n    },\n    {\n        \"batchId\": 8921,\n        \"batchName\": \"LMSProgram1238\",\n        \"batchDescription\": \"TestDescription\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16579,\n        \"programName\": \"LMSProgram\"\n    },\n    {\n        \"batchId\": 8938,\n        \"batchName\": \"LMSProgramming23\",\n        \"batchDescription\": \"whyy\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 23,\n        \"programId\": 16582,\n        \"programName\": \"LMSProgramming\"\n    },\n    {\n        \"batchId\": 8922,\n        \"batchName\": \"LMSProgramText\",\n        \"batchDescription\": \"TestDescription\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16579,\n        \"programName\": \"LMSProgram\"\n    },\n    {\n        \"batchId\": 8776,\n        \"batchName\": \"MasteringPlayWrightPWOctober\",\n        \"batchDescription\": \"PW01\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16488,\n        \"programName\": \"MasteringPlayWright\"\n    },\n    {\n        \"batchId\": 8452,\n        \"batchName\": \"Micro service-01\",\n        \"batchDescription\": \"Micro service - For developers\",\n        \"batchStatus\": \"ACTIVE\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16224,\n        \"programName\": \"Micro services\"\n    },\n    {\n        \"batchId\": 8453,\n        \"batchName\": \"Micro service -02\",\n        \"batchDescription\": \"Micro service - For developers\",\n        \"batchStatus\": \"INACTIVE\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16224,\n        \"programName\": \"Micro services\"\n    },\n    {\n        \"batchId\": 8454,\n        \"batchName\": \"Micro service -03\",\n        \"batchDescription\": \"Micro service - For Dvlp\",\n        \"batchStatus\": \"ACTIVE\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16224,\n        \"programName\": \"Micro services\"\n    },\n    {\n        \"batchId\": 8856,\n        \"batchName\": \"MobileAutoProj11\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16573,\n        \"programName\": \"MobileAutoProj\"\n    },\n    {\n        \"batchId\": 8857,\n        \"batchName\": \"MobileAutoProj12\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16573,\n        \"programName\": \"MobileAutoProj\"\n    },\n    {\n        \"batchId\": 8875,\n        \"batchName\": \"MobileSeleniumAuto11\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16574,\n        \"programName\": \"MobileSeleniumAuto\"\n    },\n    {\n        \"batchId\": 8879,\n        \"batchName\": \"MobileSeleniumAuto12\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16574,\n        \"programName\": \"MobileSeleniumAuto\"\n    },\n    {\n        \"batchId\": 8919,\n        \"batchName\": \"NnGTosq1237\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16572,\n        \"programName\": \"NnGTosqEdited\"\n    },\n    {\n        \"batchId\": 8918,\n        \"batchName\": \"NnGTosq632\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16572,\n        \"programName\": \"NnGTosqEdited\"\n    },\n    {\n        \"batchId\": 8920,\n        \"batchName\": \"NnGTosqText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16572,\n        \"programName\": \"NnGTosqEdited\"\n    },\n    {\n        \"batchId\": 8609,\n        \"batchName\": \"piechart56\",\n        \"batchDescription\": \"juh kil\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16294,\n        \"programName\": \"piechart\"\n    },\n    {\n        \"batchId\": 8599,\n        \"batchName\": \"PlayWrighteach5\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16357,\n        \"programName\": \"hg\"\n    },\n    {\n        \"batchId\": 8699,\n        \"batchName\": \"PlayWrightTFourteen2\",\n        \"batchDescription\": \"hjhjmjk\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16293,\n        \"programName\": \"selemin\"\n    },\n    {\n        \"batchId\": 8908,\n        \"batchName\": \"poland200\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16575,\n        \"programName\": \"poland\"\n    },\n    {\n        \"batchId\": 9037,\n        \"batchName\": \"PostmanExplorers001\",\n        \"batchDescription\": \"testing batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9038,\n        \"batchName\": \"PostmanExplorers002\",\n        \"batchDescription\": \"testing batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9039,\n        \"batchName\": \"PostmanExplorers003\",\n        \"batchDescription\": \"testing batch003\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9041,\n        \"batchName\": \"PostmanExplorers004\",\n        \"batchDescription\": \"testing batch004\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9042,\n        \"batchName\": \"PostmanExplorers005\",\n        \"batchDescription\": \"testing batch005\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9043,\n        \"batchName\": \"PostmanExplorers006\",\n        \"batchDescription\": \"testing batch006\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9045,\n        \"batchName\": \"PostmanExplorers008\",\n        \"batchDescription\": \"testing batch008\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9046,\n        \"batchName\": \"PostmanExplorers009\",\n        \"batchDescription\": \"testing batch009\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9047,\n        \"batchName\": \"PostmanExplorers010\",\n        \"batchDescription\": \"testing batch010\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9050,\n        \"batchName\": \"PostmanExplorers011\",\n        \"batchDescription\": \"testing batch011\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9051,\n        \"batchName\": \"PostmanExplorers012\",\n        \"batchDescription\": \"testing batch012\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9056,\n        \"batchName\": \"PostmanExplorers013\",\n        \"batchDescription\": \"testing batch013\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9057,\n        \"batchName\": \"PostmanExplorers015\",\n        \"batchDescription\": \"testing batch015\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9060,\n        \"batchName\": \"PostmanExplorers016\",\n        \"batchDescription\": \"testing batch017\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9062,\n        \"batchName\": \"PostmanExplorers017\",\n        \"batchDescription\": \"testing batch018\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16716,\n        \"programName\": \"postmanexersteam\"\n    },\n    {\n        \"batchId\": 9059,\n        \"batchName\": \"PostmanExplorers017\",\n        \"batchDescription\": \"testing batch017\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16707,\n        \"programName\": \"postmanexplorersteam\"\n    },\n    {\n        \"batchId\": 9061,\n        \"batchName\": \"PostmanExplorers018\",\n        \"batchDescription\": \"testing batch018\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16716,\n        \"programName\": \"postmanexersteam\"\n    },\n    {\n        \"batchId\": 9063,\n        \"batchName\": \"PostmanExplorers019\",\n        \"batchDescription\": \"testing batch019\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16716,\n        \"programName\": \"postmanexersteam\"\n    },\n    {\n        \"batchId\": 9067,\n        \"batchName\": \"PostmanExplorers021\",\n        \"batchDescription\": \"testing batch021\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16745,\n        \"programName\": \"postmanrsteam\"\n    },\n    {\n        \"batchId\": 8755,\n        \"batchName\": \"postmanr199\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16412,\n        \"programName\": \"postmanr\"\n    },\n    {\n        \"batchId\": 8761,\n        \"batchName\": \"postmanr666\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16412,\n        \"programName\": \"postmanr\"\n    },\n    {\n        \"batchId\": 8762,\n        \"batchName\": \"postmanr696\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16412,\n        \"programName\": \"postmanr\"\n    },\n    {\n        \"batchId\": 8758,\n        \"batchName\": \"postmanr761\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16412,\n        \"programName\": \"postmanr\"\n    },\n    {\n        \"batchId\": 8756,\n        \"batchName\": \"postmanr788\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16412,\n        \"programName\": \"postmanr\"\n    },\n    {\n        \"batchId\": 9070,\n        \"batchName\": \"Programming101\",\n        \"batchDescription\": \"Introduction to Programming Basics\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16740,\n        \"programName\": \"APINinjas\"\n    },\n    {\n        \"batchId\": 8683,\n        \"batchName\": \"programViji99\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16399,\n        \"programName\": \"programViji\"\n    },\n    {\n        \"batchId\": 8684,\n        \"batchName\": \"ProgramVJDelete1121730075549475\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16402,\n        \"programName\": \"ProgramVJDelete\"\n    },\n    {\n        \"batchId\": 8448,\n        \"batchName\": \"Python101\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16213,\n        \"programName\": \"JavaProgram\"\n    },\n    {\n        \"batchId\": 8736,\n        \"batchName\": \"pythonsdet56\",\n        \"batchDescription\": \"dfdgfghfhh\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16458,\n        \"programName\": \"soccer\"\n    },\n    {\n        \"batchId\": 8817,\n        \"batchName\": \"ReactJS002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16510,\n        \"programName\": \"ReactJS\"\n    },\n    {\n        \"batchId\": 8818,\n        \"batchName\": \"ReactJS02\",\n        \"batchDescription\": \"Basic\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16510,\n        \"programName\": \"ReactJS\"\n    },\n    {\n        \"batchId\": 8819,\n        \"batchName\": \"ReactPython002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16512,\n        \"programName\": \"ReactPython\"\n    },\n    {\n        \"batchId\": 8820,\n        \"batchName\": \"ReactPython07\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16512,\n        \"programName\": \"ReactPython\"\n    },\n    {\n        \"batchId\": 8647,\n        \"batchName\": \"rrrr12\",\n        \"batchDescription\": \"edqg\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16330,\n        \"programName\": \"rrrr\"\n    },\n    {\n        \"batchId\": 8906,\n        \"batchName\": \"sadsad001\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8907,\n        \"batchName\": \"sadsad002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8914,\n        \"batchName\": \"sadsad1236\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8913,\n        \"batchName\": \"sadsad38698\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8912,\n        \"batchName\": \"sadsad67968\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8909,\n        \"batchName\": \"sadsad76906\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8911,\n        \"batchName\": \"sadsad86889\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8910,\n        \"batchName\": \"sadsad97794\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8915,\n        \"batchName\": \"sadsadText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16562,\n        \"programName\": \"sadsad\"\n    },\n    {\n        \"batchId\": 8607,\n        \"batchName\": \"sanDoNotEdit090\",\n        \"batchDescription\": \"jki lokj\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16362,\n        \"programName\": \"sanDoNotEdit\"\n    },\n    {\n        \"batchId\": 8494,\n        \"batchName\": \"SAP01\",\n        \"batchDescription\": \"Basic \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16235,\n        \"programName\": \"SAP\"\n    },\n    {\n        \"batchId\": 8561,\n        \"batchName\": \"SAP04\",\n        \"batchDescription\": \"Basics\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16235,\n        \"programName\": \"SAP\"\n    },\n    {\n        \"batchId\": 8805,\n        \"batchName\": \"Satishyahooy002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16503,\n        \"programName\": \"Satishyahooy\"\n    },\n    {\n        \"batchId\": 8495,\n        \"batchName\": \"ScrumMasterProductOwner01\",\n        \"batchDescription\": \"First training\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16236,\n        \"programName\": \"ScrumMasterProductOwner\"\n    },\n    {\n        \"batchId\": 8570,\n        \"batchName\": \"ScrumMasterProductOwner10\",\n        \"batchDescription\": \"scrum\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16236,\n        \"programName\": \"ScrumMasterProductOwner\"\n    },\n    {\n        \"batchId\": 8496,\n        \"batchName\": \"ScrumMasterProductOwner26\",\n        \"batchDescription\": \"New Batch from Sep\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16236,\n        \"programName\": \"ScrumMasterProductOwner\"\n    },\n    {\n        \"batchId\": 9058,\n        \"batchName\": \"SDET\",\n        \"batchDescription\": \"created by saranya \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 15,\n        \"programId\": 16736,\n        \"programName\": \"Playwrightclass\"\n    },\n    {\n        \"batchId\": 9064,\n        \"batchName\": \"SDET\",\n        \"batchDescription\": \" \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16739,\n        \"programName\": \"AppiumMobiletesting\"\n    },\n    {\n        \"batchId\": 9049,\n        \"batchName\": \"SDET24\",\n        \"batchDescription\": \"SDETNov\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16723,\n        \"programName\": \"PythoNyesnoCoding\"\n    },\n    {\n        \"batchId\": 9040,\n        \"batchName\": \"SDET24\",\n        \"batchDescription\": \"SDETNov\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 32,\n        \"programId\": 16706,\n        \"programName\": \"JavaCoding\"\n    },\n    {\n        \"batchId\": 9065,\n        \"batchName\": \"SDET24\",\n        \"batchDescription\": \"SDETNov\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16747,\n        \"programName\": \"PythoNooyesnoCoding\"\n    },\n    {\n        \"batchId\": 9066,\n        \"batchName\": \"SDET24\",\n        \"batchDescription\": \"SDETNov\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16748,\n        \"programName\": \"JavaForDA\"\n    },\n    {\n        \"batchId\": 9068,\n        \"batchName\": \"SDET24\",\n        \"batchDescription\": \"SDETNov\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16763,\n        \"programName\": \"RweoacotHookos\"\n    },\n    {\n        \"batchId\": 8492,\n        \"batchName\": \"SDET-Jul\",\n        \"batchDescription\": \"SDET jul has 5 member.\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16233,\n        \"programName\": \"Inheritance-JavaOOPS\"\n    },\n    {\n        \"batchId\": 8490,\n        \"batchName\": \"SDET-Jun\",\n        \"batchDescription\": \"SDET jul has 5 member.\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16230,\n        \"programName\": \"OOPS\"\n    },\n    {\n        \"batchId\": 8491,\n        \"batchName\": \"SDET-Jun\",\n        \"batchDescription\": \"SDET jul has 5 member.\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16233,\n        \"programName\": \"Inheritance-JavaOOPS\"\n    },\n    {\n        \"batchId\": 8803,\n        \"batchName\": \"SDETNew005\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16500,\n        \"programName\": \"SDETNew\"\n    },\n    {\n        \"batchId\": 8802,\n        \"batchName\": \"SDETNew200\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16500,\n        \"programName\": \"SDETNew\"\n    },\n    {\n        \"batchId\": 8790,\n        \"batchName\": \"SDETNew89\",\n        \"batchDescription\": \"SDETNew\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 8,\n        \"programId\": 16500,\n        \"programName\": \"SDETNew\"\n    },\n    {\n        \"batchId\": 9005,\n        \"batchName\": \"SDETorganizer01\",\n        \"batchDescription\": null,\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16681,\n        \"programName\": \"SDETorganizer\"\n    },\n    {\n        \"batchId\": 8546,\n        \"batchName\": \"sdetselenium001\",\n        \"batchDescription\": \"this is test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16285,\n        \"programName\": \"sdetselenium\"\n    },\n    {\n        \"batchId\": 8573,\n        \"batchName\": \"sdetselenium005\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16285,\n        \"programName\": \"sdetselenium\"\n    },\n    {\n        \"batchId\": 8548,\n        \"batchName\": \"sdetselenium12345\",\n        \"batchDescription\": \"EW\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 34,\n        \"programId\": 16285,\n        \"programName\": \"sdetselenium\"\n    },\n    {\n        \"batchId\": 8583,\n        \"batchName\": \"sdetselenium153\",\n        \"batchDescription\": \"this is test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16285,\n        \"programName\": \"sdetselenium\"\n    },\n    {\n        \"batchId\": 8559,\n        \"batchName\": \"sdetselenium200\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16285,\n        \"programName\": \"sdetselenium\"\n    },\n    {\n        \"batchId\": 8995,\n        \"batchName\": \"seamprokn1238\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16663,\n        \"programName\": \"seamprokn\"\n    },\n    {\n        \"batchId\": 8998,\n        \"batchName\": \"seamprokn45\",\n        \"batchDescription\": \"sdssfd\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16663,\n        \"programName\": \"seamprokn\"\n    },\n    {\n        \"batchId\": 8996,\n        \"batchName\": \"seamproknText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16663,\n        \"programName\": \"seamprokn\"\n    },\n    {\n        \"batchId\": 8997,\n        \"batchName\": \"seamproko1238\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16664,\n        \"programName\": \"seamproko\"\n    },\n    {\n        \"batchId\": 8999,\n        \"batchName\": \"seamproko56\",\n        \"batchDescription\": \"dfdgfghfhh\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16664,\n        \"programName\": \"seamproko\"\n    },\n    {\n        \"batchId\": 9000,\n        \"batchName\": \"seamproko67\",\n        \"batchDescription\": \"codingclasses\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16664,\n        \"programName\": \"seamproko\"\n    },\n    {\n        \"batchId\": 8746,\n        \"batchName\": \"searchdata1000\",\n        \"batchDescription\": \"Seleinium java course\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16383,\n        \"programName\": \"searchdata\"\n    },\n    {\n        \"batchId\": 8648,\n        \"batchName\": \"Seleniumalert1\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16340,\n        \"programName\": \"Seleniumalert\"\n    },\n    {\n        \"batchId\": 8847,\n        \"batchName\": \"SeleniumCodeProk021\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8841,\n        \"batchName\": \"SeleniumCodeProk100\",\n        \"batchDescription\": \"SeleniumCodeProk \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8842,\n        \"batchName\": \"SeleniumCodeProk121\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8852,\n        \"batchName\": \"SeleniumCodeProk12334\",\n        \"batchDescription\": \"Certification\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 17,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8846,\n        \"batchName\": \"SeleniumCodeProk125\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8845,\n        \"batchName\": \"SeleniumCodeProk5\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8843,\n        \"batchName\": \"SeleniumCodeProk55\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8844,\n        \"batchName\": \"SeleniumCodeProkText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16547,\n        \"programName\": \"SeleniumCodeProk\"\n    },\n    {\n        \"batchId\": 8597,\n        \"batchName\": \"Seleniumframework5\",\n        \"batchDescription\": \"XXXXX\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16342,\n        \"programName\": \"xcode\"\n    },\n    {\n        \"batchId\": 8610,\n        \"batchName\": \"SeleniumP2011\",\n        \"batchDescription\": \"selenium auto\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8611,\n        \"batchName\": \"SeleniumP2013\",\n        \"batchDescription\": \"as sdwe\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 23,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8612,\n        \"batchName\": \"SeleniumP2031\",\n        \"batchDescription\": \"sdsdsd\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 23,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8613,\n        \"batchName\": \"SeleniumP2054\",\n        \"batchDescription\": \"dfsfsf\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 13,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8577,\n        \"batchName\": \"SeleniumP27\",\n        \"batchDescription\": \"whyy\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8578,\n        \"batchName\": \"SeleniumP28\",\n        \"batchDescription\": \"whyy\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8580,\n        \"batchName\": \"SeleniumP291\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8579,\n        \"batchName\": \"SeleniumP292\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8581,\n        \"batchName\": \"SeleniumP293\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8584,\n        \"batchName\": \"SeleniumP295\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8585,\n        \"batchName\": \"SeleniumP296\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8586,\n        \"batchName\": \"SeleniumP297\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8587,\n        \"batchName\": \"SeleniumP298\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16338,\n        \"programName\": \"SeleniumP\"\n    },\n    {\n        \"batchId\": 8954,\n        \"batchName\": \"seleniumqa9\",\n        \"batchDescription\": \"sdet\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16630,\n        \"programName\": \"seleniumqa\"\n    },\n    {\n        \"batchId\": 8661,\n        \"batchName\": \"SeleniumSmashersa005\",\n        \"batchDescription\": \"java\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16384,\n        \"programName\": \"SeleniumSmashersa\"\n    },\n    {\n        \"batchId\": 8962,\n        \"batchName\": \"SeleniumSmashersxv123\",\n        \"batchDescription\": \"dsadasd\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16641,\n        \"programName\": \"SeleniumSmashersxv\"\n    },\n    {\n        \"batchId\": 8608,\n        \"batchName\": \"seleniumstars89\",\n        \"batchDescription\": \"dfg kil\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16292,\n        \"programName\": \"seleniumstars\"\n    },\n    {\n        \"batchId\": 8554,\n        \"batchName\": \"seleniumstars9\",\n        \"batchDescription\": \"sdet\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 9,\n        \"programId\": 16292,\n        \"programName\": \"seleniumstars\"\n    },\n    {\n        \"batchId\": 8433,\n        \"batchName\": \"SMPO-0001\",\n        \"batchDescription\": \"Scrum Master Product Owner\",\n        \"batchStatus\": \"ACTIVE\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8456,\n        \"batchName\": \"SMPO10\",\n        \"batchDescription\": \"SMPO10\",\n        \"batchStatus\": \"ACTIVE\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8493,\n        \"batchName\": \"SMPO16\",\n        \"batchDescription\": \"NewBatch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8455,\n        \"batchName\": \"SMPO33\",\n        \"batchDescription\": \"DataScience BATCH 01\",\n        \"batchStatus\": \"ACTIVE\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16210,\n        \"programName\": \"SMPO\"\n    },\n    {\n        \"batchId\": 8571,\n        \"batchName\": \"SOFTWARE10000\",\n        \"batchDescription\": \"soft\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16303,\n        \"programName\": \"SOFTWARE\"\n    },\n    {\n        \"batchId\": 8560,\n        \"batchName\": \"SOFTWARE176\",\n        \"batchDescription\": \"SOFTWARE DEVELOPMENT PROGRAM\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16303,\n        \"programName\": \"SOFTWARE\"\n    },\n    {\n        \"batchId\": 8635,\n        \"batchName\": \"Splunk406\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16348,\n        \"programName\": \"Splunk\"\n    },\n    {\n        \"batchId\": 8634,\n        \"batchName\": \"Splunk701\",\n        \"batchDescription\": \"data driven 1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16348,\n        \"programName\": \"Splunk\"\n    },\n    {\n        \"batchId\": 9073,\n        \"batchName\": \"super-pyton\",\n        \"batchDescription\": \"learning basic to advance\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16767,\n        \"programName\": \"pyton\"\n    },\n    {\n        \"batchId\": 8858,\n        \"batchName\": \"teamdata001\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16492,\n        \"programName\": \"teamdata\"\n    },\n    {\n        \"batchId\": 8851,\n        \"batchName\": \"teamdata534\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16492,\n        \"programName\": \"teamdata\"\n    },\n    {\n        \"batchId\": 8624,\n        \"batchName\": \"TeamFourSDET1231\",\n        \"batchDescription\": \"aaa\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8619,\n        \"batchName\": \"TeamFourSDET1234\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8626,\n        \"batchName\": \"TeamFourSDET12341677045146\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8629,\n        \"batchName\": \"TeamFourSDET1234-178509069\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8627,\n        \"batchName\": \"TeamFourSDET12341813943588\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8630,\n        \"batchName\": \"TeamFourSDET12342051730457\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8621,\n        \"batchName\": \"TeamFourSDET123431730429\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8625,\n        \"batchName\": \"TeamFourSDET1234-50841864\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8622,\n        \"batchName\": \"TeamFourSDET1234613569133\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8623,\n        \"batchName\": \"TeamFourSDET1234703541104\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8628,\n        \"batchName\": \"TeamFourSDET1234783784016\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8660,\n        \"batchName\": \"TeamFourSDET200\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8686,\n        \"batchName\": \"TeamFourSDET32645\",\n        \"batchDescription\": \"Valid batch description\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16372,\n        \"programName\": \"TeamFourSDETEdited\"\n    },\n    {\n        \"batchId\": 8886,\n        \"batchName\": \"TeamFourSDETA1111\",\n        \"batchDescription\": \"TeamFourSDETA\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8881,\n        \"batchName\": \"TeamFourSDETA11983\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8948,\n        \"batchName\": \"TeamFourSDETA1234\",\n        \"batchDescription\": \"My Test Data\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8853,\n        \"batchName\": \"TeamFourSDETA1234\",\n        \"batchDescription\": \"MyBatch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8928,\n        \"batchName\": \"TeamFourSDETA1234-1061085558\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8957,\n        \"batchName\": \"TeamFourSDETA1234-1100983909\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8888,\n        \"batchName\": \"TeamFourSDETA12341216698942\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8926,\n        \"batchName\": \"TeamFourSDETA12341307644074\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8923,\n        \"batchName\": \"TeamFourSDETA1234-13278408\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8952,\n        \"batchName\": \"TeamFourSDETA1234-1409502821\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8930,\n        \"batchName\": \"TeamFourSDETA1234141647789\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8899,\n        \"batchName\": \"TeamFourSDETA1234-1799186701\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8951,\n        \"batchName\": \"TeamFourSDETA12341818757279\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8961,\n        \"batchName\": \"TeamFourSDETA12341879983752\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8931,\n        \"batchName\": \"TeamFourSDETA1234-1971043831\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8975,\n        \"batchName\": \"TeamFourSDETA12342071384743\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8927,\n        \"batchName\": \"TeamFourSDETA123421139117\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8934,\n        \"batchName\": \"TeamFourSDETA1234219492229\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8929,\n        \"batchName\": \"TeamFourSDETA1234-512056202\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8933,\n        \"batchName\": \"TeamFourSDETA1234529578776\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8932,\n        \"batchName\": \"TeamFourSDETA1234-532568556\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8949,\n        \"batchName\": \"TeamFourSDETA123456\",\n        \"batchDescription\": \"My Test Data\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8953,\n        \"batchName\": \"TeamFourSDETA1234977872224\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16625,\n        \"programName\": \"TeamFourSDETA\"\n    },\n    {\n        \"batchId\": 8885,\n        \"batchName\": \"TeamFourSDETA13136\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8860,\n        \"batchName\": \"TeamFourSDETA18843\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8878,\n        \"batchName\": \"TeamFourSDETA22215\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8862,\n        \"batchName\": \"TeamFourSDETA22986\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8861,\n        \"batchName\": \"TeamFourSDETA23503\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8882,\n        \"batchName\": \"TeamFourSDETA24333\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8865,\n        \"batchName\": \"TeamFourSDETA31312\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8892,\n        \"batchName\": \"TeamFourSDETA34429\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8874,\n        \"batchName\": \"TeamFourSDETA4077\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8867,\n        \"batchName\": \"TeamFourSDETA47675\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8866,\n        \"batchName\": \"TeamFourSDETA47908\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8872,\n        \"batchName\": \"TeamFourSDETA51989\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8916,\n        \"batchName\": \"TeamFourSDETA56384\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8889,\n        \"batchName\": \"TeamFourSDETA57080\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8894,\n        \"batchName\": \"TeamFourSDETA58981\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8896,\n        \"batchName\": \"TeamFourSDETA60244\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8897,\n        \"batchName\": \"TeamFourSDETA627\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8893,\n        \"batchName\": \"TeamFourSDETA64032\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8870,\n        \"batchName\": \"TeamFourSDETA6533\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8871,\n        \"batchName\": \"TeamFourSDETA68376\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8895,\n        \"batchName\": \"TeamFourSDETA76485\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8884,\n        \"batchName\": \"TeamFourSDETA76959\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8868,\n        \"batchName\": \"TeamFourSDETA80145\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8873,\n        \"batchName\": \"TeamFourSDETA81589\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8902,\n        \"batchName\": \"TeamFourSDETA83596\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8898,\n        \"batchName\": \"TeamFourSDETA90089\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8887,\n        \"batchName\": \"TeamFourSDETA92693\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8880,\n        \"batchName\": \"TeamFourSDETA94543\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8917,\n        \"batchName\": \"TeamFourSDETA98818\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16565,\n        \"programName\": \"ML\"\n    },\n    {\n        \"batchId\": 8702,\n        \"batchName\": \"TeamFourSDETOne1234\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8726,\n        \"batchName\": \"TeamFourSDETOne12341029860256\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8763,\n        \"batchName\": \"TeamFourSDETOne12341064299549\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8705,\n        \"batchName\": \"TeamFourSDETOne12341086857680\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8706,\n        \"batchName\": \"TeamFourSDETOne1234-1100533820\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8764,\n        \"batchName\": \"TeamFourSDETOne1234-1156016276\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8708,\n        \"batchName\": \"TeamFourSDETOne1234-1177054713\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8733,\n        \"batchName\": \"TeamFourSDETOne12341200284279\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8709,\n        \"batchName\": \"TeamFourSDETOne1234-1245969205\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8716,\n        \"batchName\": \"TeamFourSDETOne12341249949102\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8731,\n        \"batchName\": \"TeamFourSDETOne1234-1292768106\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8728,\n        \"batchName\": \"TeamFourSDETOne12341321468361\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8729,\n        \"batchName\": \"TeamFourSDETOne12341359297813\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8735,\n        \"batchName\": \"TeamFourSDETOne1234-1390762401\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8724,\n        \"batchName\": \"TeamFourSDETOne12341427070096\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8737,\n        \"batchName\": \"TeamFourSDETOne1234-1477738705\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8741,\n        \"batchName\": \"TeamFourSDETOne12341502710746\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8710,\n        \"batchName\": \"TeamFourSDETOne12341511788405\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8739,\n        \"batchName\": \"TeamFourSDETOne1234-1674488120\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8766,\n        \"batchName\": \"TeamFourSDETOne12341752400480\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8768,\n        \"batchName\": \"TeamFourSDETOne12341762297416\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8721,\n        \"batchName\": \"TeamFourSDETOne1234-1773118609\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8723,\n        \"batchName\": \"TeamFourSDETOne1234-17963860\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8740,\n        \"batchName\": \"TeamFourSDETOne1234-1800639928\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8704,\n        \"batchName\": \"TeamFourSDETOne1234-1813389891\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8725,\n        \"batchName\": \"TeamFourSDETOne1234-1870261839\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8711,\n        \"batchName\": \"TeamFourSDETOne1234-1932308583\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8720,\n        \"batchName\": \"TeamFourSDETOne1234193542595\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8732,\n        \"batchName\": \"TeamFourSDETOne12341942761653\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8734,\n        \"batchName\": \"TeamFourSDETOne1234-1985655749\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8717,\n        \"batchName\": \"TeamFourSDETOne12342006357290\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8703,\n        \"batchName\": \"TeamFourSDETOne1234-2086458571\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8738,\n        \"batchName\": \"TeamFourSDETOne1234-34899990\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8712,\n        \"batchName\": \"TeamFourSDETOne1234-376334646\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8730,\n        \"batchName\": \"TeamFourSDETOne1234397628003\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8742,\n        \"batchName\": \"TeamFourSDETOne1234-399509251\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8707,\n        \"batchName\": \"TeamFourSDETOne1234452527599\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8713,\n        \"batchName\": \"TeamFourSDETOne1234466361717\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8714,\n        \"batchName\": \"TeamFourSDETOne1234-470597275\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8757,\n        \"batchName\": \"TeamFourSDETOne1234-547870232\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8727,\n        \"batchName\": \"TeamFourSDETOne1234572332999\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8718,\n        \"batchName\": \"TeamFourSDETOne1234-756346470\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8722,\n        \"batchName\": \"TeamFourSDETOne1234827248111\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8715,\n        \"batchName\": \"TeamFourSDETOne1234-956632811\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16453,\n        \"programName\": \"TeamFourSDETOne\"\n    },\n    {\n        \"batchId\": 8837,\n        \"batchName\": \"TeamFourSDETThree1234\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16537,\n        \"programName\": \"TeamFourSDETThree\"\n    },\n    {\n        \"batchId\": 8836,\n        \"batchName\": \"TeamFourSDETThree15082\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16537,\n        \"programName\": \"TeamFourSDETThree\"\n    },\n    {\n        \"batchId\": 8838,\n        \"batchName\": \"TeamFourSDETThree29127\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16537,\n        \"programName\": \"TeamFourSDETThree\"\n    },\n    {\n        \"batchId\": 8826,\n        \"batchName\": \"TeamFourSDETTwo1234-1435097958\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16531,\n        \"programName\": \"TeamFourSDETTwo\"\n    },\n    {\n        \"batchId\": 8827,\n        \"batchName\": \"TeamFourSDETTwo1525102858\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16531,\n        \"programName\": \"TeamFourSDETTwo\"\n    },\n    {\n        \"batchId\": 8830,\n        \"batchName\": \"TeamFourSDETTwo24276\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16531,\n        \"programName\": \"TeamFourSDETTwo\"\n    },\n    {\n        \"batchId\": 8832,\n        \"batchName\": \"TeamFourSDETTwo46966\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16531,\n        \"programName\": \"TeamFourSDETTwo\"\n    },\n    {\n        \"batchId\": 8835,\n        \"batchName\": \"TeamFourSDETTwo47593\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16531,\n        \"programName\": \"TeamFourSDETTwo\"\n    },\n    {\n        \"batchId\": 8833,\n        \"batchName\": \"TeamFourSDETTwo89787\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16531,\n        \"programName\": \"TeamFourSDETTwo\"\n    },\n    {\n        \"batchId\": 8541,\n        \"batchName\": \"TeamFourSSPalywright123\",\n        \"batchDescription\": \"batch descrip1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16276,\n        \"programName\": \"TeamFourSSPalywright\"\n    },\n    {\n        \"batchId\": 8543,\n        \"batchName\": \"Teamnine009\",\n        \"batchDescription\": \"Sdetlms\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16282,\n        \"programName\": \"Teamnine\"\n    },\n    {\n        \"batchId\": 8572,\n        \"batchName\": \"Teamnine2\",\n        \"batchDescription\": \"team\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16282,\n        \"programName\": \"Teamnine\"\n    },\n    {\n        \"batchId\": 8555,\n        \"batchName\": \"Teamnine8001\",\n        \"batchDescription\": \"teamninebatch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16282,\n        \"programName\": \"Teamnine\"\n    },\n    {\n        \"batchId\": 8553,\n        \"batchName\": \"Teamselenium006\",\n        \"batchDescription\": \"SDET\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16291,\n        \"programName\": \"Teamselle\"\n    },\n    {\n        \"batchId\": 8551,\n        \"batchName\": \"TeamTwelveJava001\",\n        \"batchDescription\": \"TeamTwelveDescription\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 12,\n        \"programId\": 16286,\n        \"programName\": \"TeamTwelveJava\"\n    },\n    {\n        \"batchId\": 8591,\n        \"batchName\": \"TeamTwelveJava002\",\n        \"batchDescription\": \"desc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16286,\n        \"programName\": \"TeamTwelveJava\"\n    },\n    {\n        \"batchId\": 8590,\n        \"batchName\": \"TeamTwelveJava003\",\n        \"batchDescription\": \"Team12 batch new Description Mathu\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16286,\n        \"programName\": \"TeamTwelveJava\"\n    },\n    {\n        \"batchId\": 8592,\n        \"batchName\": \"TeamTwelveJava004\",\n        \"batchDescription\": \"Team12 batch new Description Mathu\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16286,\n        \"programName\": \"TeamTwelveJava\"\n    },\n    {\n        \"batchId\": 8593,\n        \"batchName\": \"TeamTwelveJava005\",\n        \"batchDescription\": \"Team12 batch new Description Mathu\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16286,\n        \"programName\": \"TeamTwelveJava\"\n    },\n    {\n        \"batchId\": 8595,\n        \"batchName\": \"TeamTwelveJava006\",\n        \"batchDescription\": \"Team12 batch new Description Mathu\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16286,\n        \"programName\": \"TeamTwelveJava\"\n    },\n    {\n        \"batchId\": 8785,\n        \"batchName\": \"TeamTwelveLMS001\",\n        \"batchDescription\": \"new description\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16495,\n        \"programName\": \"TeamTwelveLMS\"\n    },\n    {\n        \"batchId\": 8786,\n        \"batchName\": \"TeamTwelveLMS002\",\n        \"batchDescription\": \"TeamTwelveDescription\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16495,\n        \"programName\": \"TeamTwelveLMS\"\n    },\n    {\n        \"batchId\": 8787,\n        \"batchName\": \"TeamTwelveLMS003\",\n        \"batchDescription\": \"TeamTwelveDescription\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16495,\n        \"programName\": \"TeamTwelveLMS\"\n    },\n    {\n        \"batchId\": 8645,\n        \"batchName\": \"TeamTwelveMicroservices001\",\n        \"batchDescription\": \"TeamTwelveDescription\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16387,\n        \"programName\": \"TeamTwelveMicroservices\"\n    },\n    {\n        \"batchId\": 8646,\n        \"batchName\": \"TeamTwelvePython001\",\n        \"batchDescription\": \"TeamTwelveDescription\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16388,\n        \"programName\": \"TeamTwelvePython\"\n    },\n    {\n        \"batchId\": 8643,\n        \"batchName\": \"TeamTwelveSelenium001\",\n        \"batchDescription\": \"New Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16386,\n        \"programName\": \"TeamTwelveSelenium\"\n    },\n    {\n        \"batchId\": 8644,\n        \"batchName\": \"TeamTwelveSelenium010\",\n        \"batchDescription\": \"Team12 batch new Description Mathu\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16386,\n        \"programName\": \"TeamTwelveSelenium\"\n    },\n    {\n        \"batchId\": 8653,\n        \"batchName\": \"TeamTwentythree112\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16347,\n        \"programName\": \"TeamTwentythree\"\n    },\n    {\n        \"batchId\": 8655,\n        \"batchName\": \"TeamTwentythree1121730045029102\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16347,\n        \"programName\": \"TeamTwentythree\"\n    },\n    {\n        \"batchId\": 8657,\n        \"batchName\": \"TeamTwentythree1121730045296102\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16347,\n        \"programName\": \"TeamTwentythree\"\n    },\n    {\n        \"batchId\": 8650,\n        \"batchName\": \"TeamTwentythree123\",\n        \"batchDescription\": \"New batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16347,\n        \"programName\": \"TeamTwentythree\"\n    },\n    {\n        \"batchId\": 8691,\n        \"batchName\": \"TeamTwo1\",\n        \"batchDescription\": \"SdetS\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16448,\n        \"programName\": \"Teamseleniumtest\"\n    },\n    {\n        \"batchId\": 8692,\n        \"batchName\": \"TeamTwo2\",\n        \"batchDescription\": \"sdetsaa\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16448,\n        \"programName\": \"Teamseleniumtest\"\n    },\n    {\n        \"batchId\": 8697,\n        \"batchName\": \"TeamTwo3\",\n        \"batchDescription\": \"sdetsss\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16448,\n        \"programName\": \"Teamseleniumtest\"\n    },\n    {\n        \"batchId\": 8698,\n        \"batchName\": \"TeamTwo4\",\n        \"batchDescription\": \"dfghhhh\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16448,\n        \"programName\": \"Teamseleniumtest\"\n    },\n    {\n        \"batchId\": 8700,\n        \"batchName\": \"TeamTwo5\",\n        \"batchDescription\": \"SDETsdddd\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16448,\n        \"programName\": \"Teamseleniumtest\"\n    },\n    {\n        \"batchId\": 8701,\n        \"batchName\": \"TeamTwo7\",\n        \"batchDescription\": \"sed\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 7,\n        \"programId\": 16448,\n        \"programName\": \"Teamseleniumtest\"\n    },\n    {\n        \"batchId\": 8955,\n        \"batchName\": \"TeamTwooKIyu1339\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16613,\n        \"programName\": \"TeamTwooKIyu\"\n    },\n    {\n        \"batchId\": 8940,\n        \"batchName\": \"TeamTwooKIyu23\",\n        \"batchDescription\": \"scrum\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 23,\n        \"programId\": 16613,\n        \"programName\": \"TeamTwooKIyu\"\n    },\n    {\n        \"batchId\": 8956,\n        \"batchName\": \"TeamTwooKIyuText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16613,\n        \"programName\": \"TeamTwooKIyu\"\n    },\n    {\n        \"batchId\": 8798,\n        \"batchName\": \"TeamtwoVijaya03\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16486,\n        \"programName\": \"TeamtwoVijaya\"\n    },\n    {\n        \"batchId\": 8799,\n        \"batchName\": \"TeamtwoVijaya05\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16486,\n        \"programName\": \"TeamtwoVijaya\"\n    },\n    {\n        \"batchId\": 8839,\n        \"batchName\": \"teamtwoVijee123\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16539,\n        \"programName\": \"teamtwoVijee\"\n    },\n    {\n        \"batchId\": 8840,\n        \"batchName\": \"teamtwoVijeeText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16539,\n        \"programName\": \"teamtwoVijee\"\n    },\n    {\n        \"batchId\": 8651,\n        \"batchName\": \"TestAutoMethods1\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16344,\n        \"programName\": \"TestAutoMethods\"\n    },\n    {\n        \"batchId\": 8656,\n        \"batchName\": \"TestAutoMethods12321\",\n        \"batchDescription\": \"ress\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16344,\n        \"programName\": \"TestAutoMethods\"\n    },\n    {\n        \"batchId\": 8652,\n        \"batchName\": \"TestAutoMethods2\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16344,\n        \"programName\": \"TestAutoMethods\"\n    },\n    {\n        \"batchId\": 8804,\n        \"batchName\": \"testbatch003\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16502,\n        \"programName\": \"testbatch\"\n    },\n    {\n        \"batchId\": 8806,\n        \"batchName\": \"testbatch955\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16502,\n        \"programName\": \"testbatch\"\n    },\n    {\n        \"batchId\": 8552,\n        \"batchName\": \"testcheck9\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16287,\n        \"programName\": \"testcheck\"\n    },\n    {\n        \"batchId\": 8978,\n        \"batchName\": \"TestDataOne40\",\n        \"batchDescription\": \"this is test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16620,\n        \"programName\": \"TestDataOne\"\n    },\n    {\n        \"batchId\": 8979,\n        \"batchName\": \"TestDataOne63147\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16620,\n        \"programName\": \"TestDataOne\"\n    },\n    {\n        \"batchId\": 8980,\n        \"batchName\": \"TestDataOne70694\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16620,\n        \"programName\": \"TestDataOne\"\n    },\n    {\n        \"batchId\": 8950,\n        \"batchName\": \"TestDataThreeaaaaa\",\n        \"batchDescription\": \"aaa\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16622,\n        \"programName\": \"TestDataThree\"\n    },\n    {\n        \"batchId\": 8981,\n        \"batchName\": \"TestDataTwo1238\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16621,\n        \"programName\": \"TestDataTwo\"\n    },\n    {\n        \"batchId\": 8982,\n        \"batchName\": \"TestDataTwoText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16621,\n        \"programName\": \"TestDataTwo\"\n    },\n    {\n        \"batchId\": 8582,\n        \"batchName\": \"Testingchatbot54\",\n        \"batchDescription\": \"this is test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16237,\n        \"programName\": \"Testingchatbot\"\n    },\n    {\n        \"batchId\": 8745,\n        \"batchName\": \"testjk130\",\n        \"batchDescription\": \"Seleinium java course\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16381,\n        \"programName\": \"testjk\"\n    },\n    {\n        \"batchId\": 8631,\n        \"batchName\": \"TestProgEight1234\",\n        \"batchDescription\": \"My Test Batch\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16315,\n        \"programName\": \"TestProgEight\"\n    },\n    {\n        \"batchId\": 8542,\n        \"batchName\": \"testSSjava123\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16277,\n        \"programName\": \"data\"\n    },\n    {\n        \"batchId\": 8822,\n        \"batchName\": \"that07\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16515,\n        \"programName\": \"that\"\n    },\n    {\n        \"batchId\": 8824,\n        \"batchName\": \"that08\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16515,\n        \"programName\": \"that\"\n    },\n    {\n        \"batchId\": 8823,\n        \"batchName\": \"thatText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16515,\n        \"programName\": \"that\"\n    },\n    {\n        \"batchId\": 8779,\n        \"batchName\": \"today333\",\n        \"batchDescription\": \"DD 1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16485,\n        \"programName\": \"today\"\n    },\n    {\n        \"batchId\": 8794,\n        \"batchName\": \"truck002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16496,\n        \"programName\": \"truck\"\n    },\n    {\n        \"batchId\": 8829,\n        \"batchName\": \"tryDont321\",\n        \"batchDescription\": \"Selenium Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16526,\n        \"programName\": \"tryDont\"\n    },\n    {\n        \"batchId\": 8831,\n        \"batchName\": \"tryDont322\",\n        \"batchDescription\": \"BDD Automation\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16526,\n        \"programName\": \"tryDont\"\n    },\n    {\n        \"batchId\": 8813,\n        \"batchName\": \"TSfLKbtw002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16507,\n        \"programName\": \"TSfLKbtw\"\n    },\n    {\n        \"batchId\": 8812,\n        \"batchName\": \"TSfLKbtw06\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16507,\n        \"programName\": \"TSfLKbtw\"\n    },\n    {\n        \"batchId\": 8795,\n        \"batchName\": \"usa002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16493,\n        \"programName\": \"usa\"\n    },\n    {\n        \"batchId\": 8743,\n        \"batchName\": \"vijideleteprog130\",\n        \"batchDescription\": \"mathematics\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16405,\n        \"programName\": \"vijideleteprog\"\n    },\n    {\n        \"batchId\": 8967,\n        \"batchName\": \"vNiPHZkw1238\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16627,\n        \"programName\": \"vNiPHZkw\"\n    },\n    {\n        \"batchId\": 8969,\n        \"batchName\": \"vNiPHZkw32\",\n        \"batchDescription\": \"casdf\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16627,\n        \"programName\": \"vNiPHZkw\"\n    },\n    {\n        \"batchId\": 8965,\n        \"batchName\": \"vNiPHZkw40\",\n        \"batchDescription\": \"this is test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 5,\n        \"programId\": 16627,\n        \"programName\": \"vNiPHZkw\"\n    },\n    {\n        \"batchId\": 8970,\n        \"batchName\": \"vNiPHZkw70531\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16627,\n        \"programName\": \"vNiPHZkw\"\n    },\n    {\n        \"batchId\": 8971,\n        \"batchName\": \"vNiPHZkw72109\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16627,\n        \"programName\": \"vNiPHZkw\"\n    },\n    {\n        \"batchId\": 8968,\n        \"batchName\": \"vNiPHZkwText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16627,\n        \"programName\": \"vNiPHZkw\"\n    },\n    {\n        \"batchId\": 8749,\n        \"batchName\": \"VSJDelete1\",\n        \"batchDescription\": \"test\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 1,\n        \"programId\": 16413,\n        \"programName\": \"VSJDelete\"\n    },\n    {\n        \"batchId\": 8811,\n        \"batchName\": \"VSSVProg005\",\n        \"batchDescription\": \"selenium for beginners\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16505,\n        \"programName\": \"VSSVProg\"\n    },\n    {\n        \"batchId\": 8946,\n        \"batchName\": \"vthAxWW1239\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16566,\n        \"programName\": \"vthAxWWEdited\"\n    },\n    {\n        \"batchId\": 8947,\n        \"batchName\": \"vthAxWWText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16566,\n        \"programName\": \"vthAxWWEdited\"\n    },\n    {\n        \"batchId\": 8904,\n        \"batchName\": \"wewe001\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16552,\n        \"programName\": \"eeedd\"\n    },\n    {\n        \"batchId\": 8905,\n        \"batchName\": \"wewe002\",\n        \"batchDescription\": \"Introduction to Java\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16552,\n        \"programName\": \"eeedd\"\n    },\n    {\n        \"batchId\": 8900,\n        \"batchName\": \"wewe1234\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16552,\n        \"programName\": \"eeedd\"\n    },\n    {\n        \"batchId\": 8903,\n        \"batchName\": \"wewe1235\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 4,\n        \"programId\": 16552,\n        \"programName\": \"eeedd\"\n    },\n    {\n        \"batchId\": 8901,\n        \"batchName\": \"weweText\",\n        \"batchDescription\": \"SampleDesc\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16552,\n        \"programName\": \"eeedd\"\n    },\n    {\n        \"batchId\": 8565,\n        \"batchName\": \"WhyThisProgram100\",\n        \"batchDescription\": \"why\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 3,\n        \"programId\": 16240,\n        \"programName\": \"WhyThisProgram\"\n    },\n    {\n        \"batchId\": 8588,\n        \"batchName\": \"WhyThisProgram1000\",\n        \"batchDescription\": \"chatbot\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16240,\n        \"programName\": \"WhyThisProgram\"\n    },\n    {\n        \"batchId\": 8589,\n        \"batchName\": \"WhyThisProgram10000\",\n        \"batchDescription\": \"Azure Batch\",\n        \"batchStatus\": \"Inactive\",\n        \"batchNoOfClasses\": 20,\n        \"programId\": 16240,\n        \"programName\": \"WhyThisProgram\"\n    },\n    {\n        \"batchId\": 8568,\n        \"batchName\": \"WhyThisProgram2\",\n        \"batchDescription\": \"whyy\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 7,\n        \"programId\": 16240,\n        \"programName\": \"WhyThisProgram\"\n    },\n    {\n        \"batchId\": 8566,\n        \"batchName\": \"WhyThisProgram200\",\n        \"batchDescription\": \"why\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 6,\n        \"programId\": 16240,\n        \"programName\": \"WhyThisProgram\"\n    },\n    {\n        \"batchId\": 8765,\n        \"batchName\": \"xcxc397\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16454,\n        \"programName\": \"xcxc\"\n    },\n    {\n        \"batchId\": 8767,\n        \"batchName\": \"xcxc872\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16454,\n        \"programName\": \"xcxc\"\n    },\n    {\n        \"batchId\": 8771,\n        \"batchName\": \"zxcv877\",\n        \"batchDescription\": \"Description1\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 2,\n        \"programId\": 16424,\n        \"programName\": \"zxcv\"\n    }\n]"
						}
					]
				},
				{
					"name": "GetBatchbybatchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7efe199-6462-4fc5-abf1-3c0b4c744e47",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get batch by batchId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    \r",
									"} else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();  \r",
									"    }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ee208361-ae9c-4833-a28c-bb59f23eaf13",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": [
						{
							"id": "20c5385c-6227-4081-9115-19a299a67ab4",
							"name": "GetBatchbybatchId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://lms-hackthon-oct24-3efc7e0df381.herokuapp.com/lms/batches/batchId/9055"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1730990586&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=LqzjjkLPsSKSnZTcJrSHpVtQTG7jFpD2%2BkfMHxquQQ4%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1730990586&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=LqzjjkLPsSKSnZTcJrSHpVtQTG7jFpD2%2BkfMHxquQQ4%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Nov 2024 14:43:06 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"batchId\": 9055,\n    \"batchName\": \"APICommandos007\",\n    \"batchDescription\": \" \",\n    \"batchStatus\": \"Active\",\n    \"batchNoOfClasses\": 10,\n    \"programId\": 16710,\n    \"programName\": \"APICommandos\"\n}"
						}
					]
				},
				{
					"name": "GetBatchbybatchName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16913cbf-20c1-4740-8819-9360929d479b",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get batch by batchName\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    \r",
									"} else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();  \r",
									"    }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "be541a30-e790-448d-ab42-8e9e2145b688",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": [
						{
							"id": "c293cc62-0502-4b91-8f25-c21119edc9c5",
							"name": "GetBatchbybatchName",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://lms-hackthon-oct24-3efc7e0df381.herokuapp.com/lms/batches/batchName/APICommandos007"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1730990700&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=1l%2B9FVvgtxBZgrt9pV5mFKuInhX56PpV9dZ2h668d%2F4%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1730990700&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=1l%2B9FVvgtxBZgrt9pV5mFKuInhX56PpV9dZ2h668d%2F4%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Nov 2024 14:45:00 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"batchId\": 9055,\n        \"batchName\": \"APICommandos007\",\n        \"batchDescription\": \" \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    }\n]"
						}
					]
				},
				{
					"name": "GetBatchbyprogramId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "440cb836-534d-4844-8673-dfa2fd4fc496",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get batch by programId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"    \r",
									"} \r",
									"else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "343a3d49-2be0-42c0-8eda-3c8cfc830f65",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": ""
					},
					"response": [
						{
							"id": "6d1a92b5-452d-46e7-abc0-36991b812114",
							"name": "GetBatchbyProgramId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://lms-hackthon-oct24-3efc7e0df381.herokuapp.com/lms/batches/program/16710"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1730990815&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0SAJhvTDbMEdfe7ExMz8kgr%2Fngstcx1RJFCsDUMPQ00%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1730990815&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=0SAJhvTDbMEdfe7ExMz8kgr%2Fngstcx1RJFCsDUMPQ00%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Nov 2024 14:46:55 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n    {\n        \"batchId\": 9044,\n        \"batchName\": \"APICommandos001\",\n        \"batchDescription\": \"zcxvb\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 9052,\n        \"batchName\": \"APICommandos002\",\n        \"batchDescription\": \"ASDe1234\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 9053,\n        \"batchName\": \"APIComm123\",\n        \"batchDescription\": \"QWER\",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    },\n    {\n        \"batchId\": 9055,\n        \"batchName\": \"APICommandos007\",\n        \"batchDescription\": \" \",\n        \"batchStatus\": \"Active\",\n        \"batchNoOfClasses\": 10,\n        \"programId\": 16710,\n        \"programName\": \"APICommandos\"\n    }\n]"
						}
					]
				},
				{
					"name": "UpdateBatchbybatchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc4e46a9-e17e-42d4-b100-829aadea32f8",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const batchNoOfClasses = pm.variables.get(\"batchNoOfClasses\");\r",
									"const batchDescription = pm.variables.get(\"batchDescription\");\r",
									"const batchName = pm.variables.get(\"batchName\");\r",
									"const batchStatus = pm.variables.get(\"batchStatus\");\r",
									"const programId = pm.variables.get(\"programId\");\r",
									"const programName = pm.variables.get(\"programName\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"\r",
									"\r",
									"if(scenario === \"update batch with all fields\"){    \r",
									"\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.BatchDataValidation(batchName,batchDescription,batchNoOfClasses,batchStatus,programId,programName);\r",
									"    commonTests.batchPostPutSchemaValidation();\r",
									"}\r",
									"else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode,expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e95b62ca-de13-441f-bf65-9c262fa049e7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",  \r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\":\"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": ""
					},
					"response": []
				}
			],
			"id": "3f49e142-f3f3-4a09-9741-23e81427a528"
		},
		{
			"name": "Class",
			"item": [
				{
					"name": "Create Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd6bbdad-382f-4e14-b69e-588b4d34a121",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const classComments = pm.variables.get(\"classComments\");\r",
									"const classDate = pm.variables.get(\"classDate\");\r",
									"const classDescription = pm.variables.get(\"classDescription\");\r",
									"const classNo = pm.variables.get(\"classNo\");\r",
									"const classNotes = pm.variables.get(\"classNotes\");\r",
									"const classRecordingPath = pm.variables.get(\"classRecordingPath\");\r",
									"const classStaffId = pm.collectionVariables.get(\"staffId\");\r",
									"const classStatus = pm.variables.get(\"classStatus\");\r",
									"const classTopic = pm.variables.get(\"classTopic\");\r",
									"const batchId = pm.collectionVariables.get(\"batchID1\");\r",
									"const batchName = pm.collectionVariables.get(\"batchName1\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"//To store all the class ids created by positive and negative scenarios, into an array for data cleanup\r",
									"if (pm.response.status=== \"Created\") {\r",
									"    let bodyData = pm.response.json();\r",
									"    let classId = bodyData.csId;\r",
									"    let classTopic = bodyData.classTopic;\r",
									"\r",
									"    var classIDs = pm.collectionVariables.get(\"classIDs\");\r",
									"    if (!classIDs) {\r",
									"        classIDs = [];\r",
									"    } else {\r",
									"        classIDs = JSON.parse(classIDs);\r",
									"    }\r",
									"    classIDs.push(classId);    \r",
									"    pm.collectionVariables.set(\"classIDs\", JSON.stringify(classIDs));\r",
									"\r",
									"    if (classIDs.length === 1) {\r",
									"        pm.collectionVariables.set(\"classID1\", classId);\r",
									"        console.log(\"classID1:\" +classId);\r",
									"        pm.collectionVariables.set(\"classTopic1\", classTopic);\r",
									"    }\r",
									"}\r",
									"\r",
									"if ((scenario === \"create class with all fields\") || (scenario === \"create class with only mandatory fields\")) {\r",
									"   /* try {\r",
									"    let bodyData = pm.response.json();\r",
									"    let classId = bodyData.csId;\r",
									"    pm.collectionVariables.set(\"classID\", classId);\r",
									"    } catch (error) {\r",
									"        console.error(\"Class is not created due to an error:\", error);  \r",
									"    } */\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.classDataValidation(batchId, classComments, classDate, classDescription, classNo, classNotes, classRecordingPath, classStaffId, classStatus, classTopic, batchName);\r",
									"    commonTests.classPostPutSchemaValidation(); \r",
									"\r",
									"} else if ((scenario === \"create class without authorization\") || (scenario === \"create class with invalid baseURL\") || (scenario === \"create class with invalid endpoint\")) {\r",
									"        commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"        commonTests.checkResponseTime();        \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);    \r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ca22d3cc-9f99-4c6b-ba20-0310116458fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchId\": {{batchId}},  \r\n  \"classComments\": \"{{classComments}}\",\r\n  \"classDate\": \"{{classDate}}\",\r\n  \"classDescription\": \"{{classDescription}}\",\r\n  \"classNo\": {{classNo}},\r\n  \"classNotes\": \"{{classNotes}}\",\r\n  \"classRecordingPath\": \"{{classRecordingPath}}\",\r\n  \"classStaffId\": \"{{classStaffId}}\",\r\n  \"classStatus\": \"{{classStatus}}\",\r\n  \"classTopic\": \"{{classTopic}}\",\r\n   \"classScheduledDates\": [\r\n    \"{{classScheduledDates_1}}\",\r\n    \"{{classScheduledDates_2}}\"\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"response": []
				},
				{
					"name": "Get all Class List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c246379-2651-47d1-9550-9bb6118f5a59",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get all class list positive\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"commonTests.checkResponseisArray();\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "54ec7fb5-a55e-43e4-ac3a-196b725a599c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get Class Recordings by BatchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b692af5-a938-43b8-84b5-10287901aa43",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get class recordings by valid BatchId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const classIDs = JSON.parse(pm.collectionVariables.get(\"classIDs\"));\r",
									"        const responseBody = pm.response.json();\r",
									"\r",
									"        responseBody.forEach(item => {\r",
									"            pm.expect(classIDs).to.include(item.csId);\r",
									"        });\r",
									"    });\r",
									"} else if (scenario === \"get class recordings by invalid BatchId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a86b8f50-5937-4c4d-9e1e-876b4176d58e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get Class details by Class Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c8875ca-df3b-4c68-a38c-cb6cd36e0e43",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get class details by valid ClassID\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const classID = pm.collectionVariables.get(\"classID1\");\r",
									"        pm.expect(pm.response.json().csId).to.be.eql(classID);\r",
									"    });\r",
									"} else if (scenario === \"get class details by invalid ClassID\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"}\r",
									"\r",
									"else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a76b425c-3ea2-4f6f-9a7b-0b76df4ec490",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get all Classes by Class Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16862424-da5c-4149-bc6f-716e5d45524c",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get all classes by valid class topic\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const classTopic = pm.collectionVariables.get(\"classTopic1\");\r",
									"        const responseData = pm.response.json();\r",
									"        pm.expect(responseData[0].classTopic).to.be.eql(classTopic);\r",
									"    });\r",
									"} else if (scenario === \"get all classes by non-existing class topic\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0c58e827-a67b-47d6-a515-8270010a67d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get all Classes by BatchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fbcf61c-647e-4816-865e-610a9d2a7d38",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get all classes by valid batchId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"   pm.test(\"Data validations in the response body\", () => {\r",
									"        const classIDs = JSON.parse(pm.collectionVariables.get(\"classIDs\"));\r",
									"        const responseBody = pm.response.json();\r",
									"\r",
									"        responseBody.forEach(item => {\r",
									"            pm.expect(classIDs).to.include(item.csId);\r",
									"        });\r",
									"    });\r",
									"} else if (scenario === \"get all classes by invalid batchId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fe919542-40a7-41ce-82f3-ecca0ed61a1b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get all Classes by StaffId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c362783-731b-473b-8b6a-f14ca1dff01e",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get all classes by valid StaffId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const staffId = pm.collectionVariables.get(\"staffId\");\r",
									"        const responseBody = pm.response.json();\r",
									"\r",
									"        responseBody.forEach(item => {\r",
									"            pm.expect(staffId).to.include(item.classStaffId);\r",
									"        });    });\r",
									"} else if (scenario === \"get all classes by invalid StaffId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fac3d7e5-298e-4504-aa19-fb556ec556d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get all recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7864a71b-e948-4f08-999a-b33f1bd83cf6",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"Get all recordings positive\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"commonTests.checkResponseisArray();\r",
									"    pm.test(\"Response body contains csId and classRecordingPath keys\", function() {\r",
									"        const responseBody = pm.response.json();\r",
									"        responseBody.forEach(item => {\r",
									"        pm.expect(item).to.have.property(\"csId\");\r",
									"        pm.expect(item).to.have.property(\"classRecordingPath\");\r",
									"        });\r",
									"    });\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "61bbf321-9cd4-497c-ae9c-bd0b20f9607f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get Class Recordings by Class Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f503925-d116-465a-806b-4b2d03844a3a",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get class recordings by valid classId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const classID = pm.collectionVariables.get(\"classID1\");\r",
									"        const responseBody = pm.response.json();\r",
									"        pm.expect(responseBody.csId).to.be.eql(classID);\r",
									"        pm.expect(responseBody).to.have.property(\"classRecordingPath\");\r",
									"    });\r",
									"} else if ((scenario === \"get class recordings by invalid ClassID\") || (scenario === \"get class recordings by valid ClassID with no recordings\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"}\r",
									"\r",
									"else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2ce3a16f-f3c0-4f93-a333-1eae2bc9e855",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get all Upcoming Classes for particular Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c51b637e-6a9d-48cc-9c85-17ed1b03597c",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get all upcoming classes by valid studentId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"commonTests.checkResponseisArray();   \r",
									"} else if ((scenario === \"get all upcoming classes by invalid studentId\")||(scenario === \"get all upcoming classes by staffId\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    \r",
									"    pm.test(\"Response is an empty array\", function() {    \r",
									"    pm.expect(pm.response.json()).to.have.lengthOf(0);\r",
									"    }); \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "772756a3-a71c-491e-ba51-89b5f217203a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get Class Recordings Download by Class Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f43b07d4-fa6f-4c19-a905-3778c1512f72",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get class recordings download by valid classId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const classID = pm.collectionVariables.get(\"classID1\");\r",
									"        const responseBody = pm.response.json();\r",
									"        pm.expect(responseBody.csId).to.be.eql(classID);\r",
									"        pm.expect(responseBody).to.have.property(\"classRecordingPath\");\r",
									"    });\r",
									"} else if ((scenario === \"get class recordings download by invalid classID\") || (scenario === \"get class recordings download by classID with no recordings\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"}\r",
									"\r",
									"else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0acb82ea-31b7-4b9b-ac70-48028c35f70e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Update Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fc5c488-d7b7-4ff7-97d5-f93dea1ae5c4",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const classComments = pm.variables.get(\"classComments\");\r",
									"const classDate = pm.variables.get(\"classDate\");\r",
									"const classDescription = pm.variables.get(\"classDescription\");\r",
									"const classNo = pm.variables.get(\"classNo\");\r",
									"const classNotes = pm.variables.get(\"classNotes\");\r",
									"const classRecordingPath = pm.variables.get(\"classRecordingPath\");\r",
									"const classStaffId = pm.variables.get(\"classStaffId\");\r",
									"const classStatus = pm.variables.get(\"classStatus\");\r",
									"const classTopic = pm.variables.get(\"classTopic\");\r",
									"const batchId = pm.collectionVariables.get(\"batchID1\");\r",
									"const batchName = pm.collectionVariables.get(\"batchName1\");\r",
									"const classID = pm.collectionVariables.get(\"classID1\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"const batchId2 = pm.collectionVariables.get(\"batchID2\");\r",
									"\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if ((scenario === \"update class with all fields\") || (scenario === \"update class with only mandatory fields\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.classDataValidation(batchId, classComments, classDate, classDescription, classNo, classNotes, classRecordingPath, classStaffId, classStatus, classTopic, batchName);\r",
									"    commonTests.classPostPutSchemaValidation(); \r",
									"\r",
									"} else if ((scenario === \"update class without authorization\") || (scenario === \"update class with invalid baseURL\") || (scenario === \"update class with invalid endpoint\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();        \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"      if (scenario === \"update class with new batchId\") {\r",
									"            let dynamicExpectedResponseMessage = expectedResponseMessage.replace(\"{classID1}\", classID)\r",
									"                .replace(\"{batchID2}\", batchId2);\r",
									"            commonTests.checkErrorMessage(dynamicExpectedResponseMessage, expectedResponseStatus);\r",
									"   \r",
									"        } else {\r",
									"            commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"        }\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a39f8b12-18d1-4314-b2bc-4d719c6c75c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"batchId\": {{batchId}},\r\n    \"classNo\": {{classNo}},\r\n    \"classDate\": \"{{classDate}}\",\r\n    \"classTopic\": \"{{classTopic}}\",\r\n    \"classStatus\": \"{{classStatus}}\",\r\n    \"classStaffId\": \"{{classStaffId}}\",\r\n    \"classDescription\": \"{{classDescription}}\",\r\n    \"classComments\": \"{{classComments}}\",\r\n    \"classNotes\": \"{{classNotes}}\",\r\n    \"classRecordingPath\": \"{{classRecordingPath}}\",\r\n    \"classScheduledDates\": [\r\n    \"{{classScheduledDates_1}}\",\r\n    \"{{classScheduledDates_2}}\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"response": []
				},
				{
					"name": "Update Class Recording Path",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c925de78-530b-46eb-a91f-b1661ddebbaf",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const classRecordingPath = pm.variables.get(\"classRecordingPath\");\r",
									"const classID = pm.collectionVariables.get(\"classID1\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if ((scenario === \"update class recordings with valid data\") || (scenario === \"update class recordings without classRecordingPath field\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody(); \r",
									"    commonTests.classRecPathDataValidation(classID, classRecordingPath);\r",
									"    commonTests.classPostPutSchemaValidation(); \r",
									"\r",
									"} else if ((scenario === \"update class recordings without authorization\") || (scenario === \"update class recordings with invalid baseURL\") || (scenario === \"update class recordings with invalid endpoint\")) {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();        \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();     \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);        \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "50eb6437-ae07-496c-8b2b-99f4813f7cab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"classRecordingPath\": \"{{classRecordingPath}}\",\r\n  \"csId\": {{csId}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"response": []
				}
			],
			"id": "b6d686c3-6439-4e75-8cd4-d58991295f56"
		},
		{
			"name": "ProgramBatchMapController",
			"item": [
				{
					"name": "Get Assigned Program/Batch of All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db9c5cb7-87d8-421f-9bc5-35fcf5912cef",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get assigned program/batch of all users positive\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"commonTests.checkResponseisArray();\r",
									"commonTests.roleprogramBatchMapDataValidation();\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f5838742-997e-4420-84a3-1d6f7b480132",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get Assigned Program/Batch by User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0303125e-7306-4403-a544-d4d2af831e66",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"get assigned program/batch by valid userId\") {\r",
									"commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"commonTests.checkResponseBodyAsJson();\r",
									"\r",
									"    pm.test(\"Data validations in the response body\", () => {\r",
									"        const userID = pm.collectionVariables.get(\"userId\");\r",
									"        const responseBody = pm.response.json();\r",
									"\r",
									"        responseBody.forEach(item => {\r",
									"            pm.expect(item.userId).to.be.eql(userID);\r",
									"        }); \r",
									"    });\r",
									"} else if (scenario === \"get assigned program/batch by invalid userId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();  \r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"}\r",
									"\r",
									"else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();    \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "96e4976a-91e2-472d-b469-ba0eb4b890d7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete All Programs/Batches assigned to the User By UserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "155a8449-ce3e-4682-9d28-0857ad6b5593",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const classID = pm.collectionVariables.get(\"classID1\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"\r",
									"if (scenario === \"delete all programs/batches assigned to the user By valid userId\" || scenario === \"delete all programs/batches assigned to the user By invalid userId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "338e082c-5f7a-4e7b-984a-54de58247a01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": []
					},
					"response": []
				}
			],
			"id": "fe408ad5-6204-4944-923a-36d4c0ac2209"
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete Class Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ef1910f-a81c-4671-a381-0df8785b11c9",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const classID = pm.collectionVariables.get(\"classID1\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"delete class by non-existing classId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									" \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();        \r",
									"} \r",
									"\r",
									"//pm.collectionVariables.unset(\"batchIDs\");\r",
									"//pm.collectionVariables.unset(\"batchNames\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9443182c-17c3-4db0-954e-bdeaf4acfe2c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete Class Positive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6983090f-71dc-4b98-903c-d19d22337d5f",
								"exec": [
									"const baseURL = pm.environment.get(\"baseURL\");\r",
									"const endpoint = \"deleteByClass/\";\r",
									"\r",
									"const classIDsList = pm.collectionVariables.get(\"classIDs\");\r",
									"const classIDArray = JSON.parse(classIDsList);\r",
									"\r",
									"console.log(\"classIDs: \"+classIDsList );\r",
									"const classID = classIDArray.shift();\r",
									"\r",
									"const token = pm.globals.get('token');  \r",
									"pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });\r",
									"\r",
									"pm.request.url = baseURL + endpoint + classID;\r",
									"\r",
									"pm.collectionVariables.set(\"classIDs\", JSON.stringify(classIDArray));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1e3f3925-fc96-42f7-bcde-d5071c74754b",
								"exec": [
									"const classIDsList = pm.collectionVariables.get(\"classIDs\");\r",
									"const classIDArray = JSON.parse(classIDsList);\r",
									"\r",
									"console.log(\"classIDs: \"+classIDsList);\r",
									"\r",
									"commonTests.checkStatusLine(200, \"OK\");\r",
									"commonTests.checkResponseTime();\r",
									"commonTests.checkResponseHeader();\r",
									"commonTests.checkResponseHasBody();\r",
									"\r",
									"if (classIDArray.length > 0) {\r",
									"    pm.execution.setNextRequest(pm.info.requestName);\r",
									"} else {\r",
									"    pm.collectionVariables.unset(\"classIDs\");\r",
									"    pm.execution.setNextRequest(null); \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "44b4cd5e-8ccc-48dd-8522-dcce3c3f3a10",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": ""
					},
					"response": []
				},
				{
					"name": "DeleteBatchbybatchId positive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4d6e4f6f-8614-45df-996a-7a03eed470bc",
								"exec": [
									"const baseURL = pm.environment.get(\"baseURL\");\r",
									"const endpoint = \"batches/\";\r",
									"\r",
									"const batchIDs = pm.collectionVariables.get(\"batchIDs\");\r",
									"const batchIDArray = JSON.parse(batchIDs);\r",
									"\r",
									"console.log(\"batchIDs: \"+batchIDs );\r",
									"const batchID = batchIDArray.shift();\r",
									"\r",
									"const token = pm.globals.get('token');  \r",
									"pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });\r",
									"\r",
									"pm.request.url = baseURL + endpoint + batchID;\r",
									"\r",
									"pm.collectionVariables.set(\"batchIDs\", JSON.stringify(batchIDArray));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6e5dc040-72da-49d0-9326-8a57e41b3baa",
								"exec": [
									"const batchIDs = pm.collectionVariables.get(\"batchIDs\");\r",
									"const batchIDArray = JSON.parse(batchIDs);\r",
									"\r",
									"console.log(\"batchIDs: \"+batchIDs);\r",
									"\r",
									"commonTests.checkStatusLine(200, \"OK\");\r",
									"commonTests.checkResponseTime();\r",
									"\r",
									"\r",
									"if (batchIDArray.length > 0) {\r",
									"    pm.execution.setNextRequest(pm.info.requestName);\r",
									"} else {\r",
									"    pm.collectionVariables.unset(\"batchIDs\");\r",
									"    pm.execution.setNextRequest(null); \r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fcac45b6-88b4-446e-832a-d9bd05c66b83",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "DELETE",
						"header": []
					},
					"response": []
				},
				{
					"name": "DeleteBatchbybatchId  Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e40bcd9b-8c88-4de0-a3a7-4e11ce52a039",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const expectedResponseMessage = pm.variables.get(\"expectedResponseMessage\");\r",
									"const expectedResponseStatus = pm.variables.get(\"expectedResponseStatus\");\r",
									"const batchID = pm.collectionVariables.get(\"batchID2\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if (scenario === \"delete batch by batchId\") {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"    commonTests.checkResponseHeader();\r",
									"    commonTests.checkResponseHasBody();\r",
									"    commonTests.checkErrorMessage(expectedResponseMessage, expectedResponseStatus);\r",
									" \r",
									"} else {\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();        \r",
									"} "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "987e9023-4e7a-472a-9313-d74ab31a3e94",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "DELETE",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete Program By Program ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "741c78bb-d8b6-402d-a86e-86f42915e292",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if(scenario === \"delete program with valid program Id\"){ \r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"\r",
									"}else if(scenario === \"delete program with program Id without authorization\"){\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage),\r",
									"    commonTests.checkResponseTime();\r",
									"}else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9714137a-ee21-469a-90e2-358b7b2587c2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "DELETE",
						"header": [],
						"url": ""
					},
					"response": []
				},
				{
					"name": "Delete Program By Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b462bab6-f8bc-429c-b8ca-a28b9b13358d",
								"exec": [
									"const expectedStatusCode = pm.variables.get(\"expectedStatusCode\");\r",
									"const expectedStatusMessage = pm.variables.get(\"expectedStatusMessage\");\r",
									"const scenario = pm.variables.get(\"scenario\");\r",
									"console.log(\"Scenario: \"+ scenario);\r",
									"\r",
									"if(scenario === \"delete program by Program Name with valid program name\"){ \r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"\r",
									"}else if(scenario === \"delete program by Program Name without authorization\"){\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage),\r",
									"    commonTests.checkResponseTime();\r",
									"}else{\r",
									"    commonTests.checkStatusLine(expectedStatusCode, expectedStatusMessage);\r",
									"    commonTests.checkResponseTime();\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "93c34d98-0a35-4e52-9a18-8b585910c1bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "DELETE",
						"header": [],
						"url": ""
					},
					"response": []
				}
			],
			"id": "6f3ebadf-9d45-452c-b346-1f83100f6b14"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6b4efb93-9d16-444e-82d8-f727955c8726",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if(typeof pm.variables.get('requestData') !== 'object')\r",
					"{\r",
					"    pm.variables.set('requestData', pm.iterationData.toObject());\r",
					"}\r",
					"\r",
					"const requestData = pm.variables.get('requestData');\r",
					"\r",
					"if(typeof requestData != 'object' || Object.keys(requestData).length === 0)\r",
					"{\r",
					"    console.log('No external data provided/data set is empty');\r",
					"    return;\r",
					"}\r",
					"\r",
					"const currentRequest = requestData.requests.filter(({name}) => name === pm.info.requestName)[0];\r",
					"\r",
					"if(!currentRequest){\r",
					"    console.log('Request ${pm.info.requestName} has no data.');\r",
					"}\r",
					"\r",
					"if(currentRequest){\r",
					"\r",
					"    const variables = currentRequest.data.shift();\r",
					"\r",
					"    Object.entries(variables).forEach(([key, value]) => {\r",
					"        pm.variables.set(key, value);\r",
					"    });\r",
					"\r",
					"    let baseUrl;\r",
					"\r",
					"    if (variables.scenario.toLowerCase().includes(\"invalid baseurl\")) {\r",
					"        baseUrl = pm.environment.get(\"invalidBaseURL\");\r",
					"    } else {  \r",
					"        baseUrl = pm.environment.get(\"baseURL\");\r",
					"    }\r",
					"\r",
					"    const endpoint = variables.endpoint; \r",
					"\r",
					"    let fullURL = baseUrl + endpoint; \r",
					"\r",
					"    pm.request.url = fullURL;\r",
					"\r",
					"    if (variables.includeAuth.toLowerCase() === 'true') {\r",
					"        const token = pm.globals.get('token');  \r",
					"        pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });\r",
					"    } else {\r",
					"       console.log(\"No Authorization header needed\"); \r",
					"    }\r",
					"\r",
					"    pm.variables.set('requestData', requestData);\r",
					"\r",
					"    if(currentRequest.data.length > 0){\r",
					"       pm.execution.setNextRequest(pm.info.requestName);\r",
					"    }\r",
					"}\t\t"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "43146447-10ba-4c29-bde2-52eccf6c2ba7",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"commonTests = {\r",
					"    checkStatusLine: function(expectedStatusCode, expectedStatusMessage) {\r",
					"        pm.test(`Status code is ${expectedStatusCode}`, () => {\r",
					"            pm.response.to.have.status(expectedStatusCode);  \r",
					"        });\r",
					"        pm.test(`Status message is '${expectedStatusMessage}'`, () => {\r",
					"            pm.response.to.have.status(expectedStatusMessage);\r",
					"        });        \r",
					"    },\r",
					"\r",
					"    checkResponseHeader: function() {\r",
					"        pm.test(\"Response Header Content-Type is application/json\", function () {\r",
					"            pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
					"        });\r",
					"    },\r",
					"\r",
					"    checkResponseHasBody: function() {\r",
					"        pm.test(\"Verify Response has Body or not\", function(){\r",
					"            pm.response.to.be.withBody;\r",
					"        });\r",
					"    },\r",
					"\r",
					"    checkResponseBodyAsJson: function() {\r",
					"        pm.test(\"Verify Response Body as JSON\", function(){\r",
					"            pm.response.to.be.json;\r",
					"        });\r",
					"    },\r",
					"\r",
					"    checkResponseTime: function() {\r",
					"        pm.test(\"Response time is less than 500ms\", function () {\r",
					"            pm.expect(pm.response.responseTime).to.be.below(500);\r",
					"        });\r",
					"    },\r",
					"    \r",
					"    checkErrorMessage: function(expectedResponseMessage, expectedResponseStatus) {      \r",
					"        pm.test(\"Check if error message matches expected\", function () {\r",
					"        pm.expect(pm.response.json().message).to.eql(expectedResponseMessage); \r",
					"        });\r",
					"\r",
					"        pm.test(\"Check if response status is as expected\", function () {\r",
					"        pm.expect(pm.response.json().success).to.eql(expectedResponseStatus); \r",
					"        });\r",
					"    },\r",
					"\r",
					"    checkResponseisArray: function() {\r",
					"        pm.test(\"Response is an array\", function () {\r",
					"            pm.expect(Array.isArray(pm.response.json())).to.be.true;\r",
					"        });\r",
					"    },\r",
					"\r",
					"    classDataValidation: function (batchId, classComments, classDate, classDescription, classNo, classNotes, classRecordingPath, classStaffId, classStatus, classTopic, batchName) {\r",
					"        pm.test(\"Data validations in the response body\", () => {\r",
					"            pm.expect(pm.response.json().csId).is.not.null;\r",
					"            pm.expect(pm.response.json().batchId).to.be.equal(batchId);\r",
					"            pm.expect(pm.response.json().classComments).to.be.equal(classComments);\r",
					"            pm.expect(pm.response.json().classDate).to.be.equal(classDate);\r",
					"            pm.expect(pm.response.json().classDescription).to.be.equal(classDescription);\r",
					"            pm.expect(pm.response.json().classNo).to.be.equal(classNo);\r",
					"            pm.expect(pm.response.json().classNotes).to.be.equal(classNotes);\r",
					"            pm.expect(pm.response.json().classRecordingPath).to.be.equal(classRecordingPath);\r",
					"            pm.expect(pm.response.json().classStaffId).to.be.equal(classStaffId);\r",
					"            pm.expect(pm.response.json().classStatus).to.be.equal(classStatus);\r",
					"            pm.expect(pm.response.json().classTopic).to.be.equal(classTopic);\r",
					"            pm.expect(pm.response.json().batchName).to.be.equal(batchName);\r",
					"        });\r",
					"\r",
					"        pm.test(\"Data type in the response body\", () => {\r",
					"            pm.expect(pm.response.json().csId).to.be.a('number'); \r",
					"            pm.expect(pm.response.json().batchId).to.be.a('number'); \r",
					"            pm.expect(pm.response.json().classComments).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classDate).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classDescription).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classNo).to.be.a('number'); \r",
					"            pm.expect(pm.response.json().classNotes).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classRecordingPath).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classStaffId).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classStatus).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classTopic).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().batchName).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().classScheduledDates).to.be.an('array');\r",
					"        });\r",
					"    },\r",
					"\r",
					"    classRecPathDataValidation: function (classId, classRecordingPath) {\r",
					"        pm.test(\"Data validations in the response body\", () => {\r",
					"            pm.expect(pm.response.json().csId).to.be.equal(classId);          \r",
					"            pm.expect(pm.response.json().classRecordingPath).to.be.equal(classRecordingPath);            \r",
					"        });\r",
					"\r",
					"        pm.test(\"Data type in the response body\", () => {\r",
					"            pm.expect(pm.response.json().csId).to.be.a('number');             \r",
					"            pm.expect(pm.response.json().classRecordingPath).to.be.a('string');             \r",
					"        });\r",
					"    },\r",
					"\r",
					"    roleprogramBatchMapDataValidation: function () {\r",
					"        pm.test(\"Data type validation in the response body\", () => {\r",
					"            const responseData = pm.response.json();\r",
					"\r",
					"            responseData.forEach(item => {\r",
					"                pm.expect(item.userId).to.be.a('string');            \r",
					"                pm.expect(item.roleId).to.be.a('string');\r",
					"                pm.expect(item.programId).to.be.a('number');\r",
					"                pm.expect(item.batchId).to.be.a('number');\r",
					"                pm.expect(item.userRoleProgramBatchStatus).to.be.a('string');\r",
					"            });\r",
					"        });\r",
					"    },\r",
					"\r",
					"    ProgramDataValidation: function (programName, programDescription, programStatus) {\r",
					"        pm.test(\"Data validations in the response body\", () => {\r",
					"            pm.expect(pm.response.json().programId).is.not.null;           \r",
					"            pm.expect(pm.response.json().programName).to.be.equal(programName);\r",
					"            pm.expect(pm.response.json().programDescription).to.be.equal(programDescription);\r",
					"            pm.expect(pm.response.json().programStatus).to.be.equal(programStatus);\r",
					"            pm.expect(pm.response.json().creationTime).is.not.null;\r",
					"            pm.expect(pm.response.json().lastModTime).is.not.null;\r",
					"        });\r",
					"\r",
					"        pm.test(\"Data type in the response body\", () => {\r",
					"            pm.expect(pm.response.json().programId).to.be.a('number'); \r",
					"            pm.expect(pm.response.json().programName).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().programDescription).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().programStatus).to.be.a('string'); \r",
					"            pm.expect(pm.response.json().creationTime).to.be.a('string');\r",
					"            pm.expect(pm.response.json().lastModTime).to.be.a('string'); \r",
					"        });\r",
					"    },\r",
					"\r",
					"    BatchDataValidation: function (batchName,batchDescription,batchNoOfClasses,batchStatus,programId,programName) {    \r",
					"        pm.test(\"Data validation in response\", () => { \r",
					"        pm.expect(pm.response.json().batchId).is.not.null;   \r",
					"        pm.expect(pm.response.json().batchName).to.be.equal(batchName);\r",
					"        pm.expect(pm.response.json().batchDescription).to.equal(batchDescription);\r",
					"        pm.expect(pm.response.json().batchNoOfClasses).to.equal(batchNoOfClasses);\r",
					"        pm.expect(pm.response.json().batchStatus).to.equal(batchStatus);\r",
					"        pm.expect(pm.response.json().programId).to.equal(programId);\r",
					"        pm.expect(pm.response.json().programName).to.equal(programName);\r",
					"        });  \r",
					"        pm.test(\"Data type validation\", () => { \r",
					"        pm.expect(pm.response.json().batchId).to.be.a('number');\r",
					"        pm.expect(pm.response.json().batchName).to.be.a('string');\r",
					"        pm.expect(pm.response.json().batchDescription).to.be.a('string');\r",
					"        pm.expect(pm.response.json().batchNoOfClasses).to.be.a('number');\r",
					"        pm.expect(pm.response.json().batchStatus).to.be.a('string');\r",
					"        pm.expect(pm.response.json().programId).to.be.a('number');\r",
					"        pm.expect(pm.response.json().programName).to.be.a('string');  \r",
					"        }); \r",
					"    }, \r",
					"\r",
					"    classPostPutSchemaValidation: function() {\r",
					"        pm.test(\"Response schema is valid\", function () {\r",
					"            const schema = {\r",
					"                \"type\": \"object\",\r",
					"                \"additionalProperties\": false,\r",
					"                \"properties\": {\r",
					"                        \"csId\": {\"type\": \"integer\"},\r",
					"                        \"batchId\": {\"type\": \"integer\"},\r",
					"                        \"classNo\": {\"type\": \"integer\"},\r",
					"                        \"classDate\": {\"type\": \"string\",\"format\": \"date-time\"},\r",
					"                        \"classTopic\": {\"type\": \"string\"},\r",
					"                        \"classStatus\": {\"type\": \"string\"},\r",
					"                        \"classStaffId\": {\"type\": \"string\"},\r",
					"                        \"classDescription\": {\"anyOf\": [{\"type\": \"null\"},{\"type\": \"string\"}]},\r",
					"                        \"classComments\": {\"anyOf\": [{\"type\": \"null\"},{\"type\": \"string\"}]},\r",
					"                        \"classNotes\": {\"anyOf\": [{\"type\": \"null\"},{\"type\": \"string\",\"qt-uri-protocols\": [\"https\"]}]},\r",
					"                        \"classRecordingPath\": {\"anyOf\": [{\"type\": \"null\"},{\"type\": \"string\",\"qt-uri-protocols\": [\"https\"]}]},\r",
					"                        \"batchName\": {\"type\": \"string\"},\r",
					"                        \"classScheduledDates\": {\r",
					"                            \"anyOf\": [\r",
					"                                {\r",
					"                                    \"type\": \"array\",\r",
					"                                    \"items\": {\r",
					"                                        \"type\": \"string\",\r",
					"                                        \"format\": \"date-time\"\r",
					"                                    }\r",
					"                                },\r",
					"                                {\"type\": \"null\"}\r",
					"                            ]\r",
					"                        }\r",
					"                    },\r",
					"                    \"required\": [\r",
					"                        \"batchId\",\r",
					"                        \"batchName\",\r",
					"                        \"classDate\",\r",
					"                        \"classNo\",\r",
					"                        \"classStatus\",\r",
					"                        \"classTopic\",\r",
					"                        \"classStaffId\",\r",
					"                        \"csId\"\r",
					"                    ],\r",
					"            }\r",
					"                pm.expect(pm.response.json()).to.have.jsonSchema(schema);\r",
					"            });\r",
					"        },\r",
					"\r",
					"    programPostPutSchemaValidation: function() {\r",
					"        pm.test(\"Response schema is valid\", function () {\r",
					"        const schema = {\r",
					"            \"type\": \"object\",\r",
					"            \"properties\": {\r",
					"                \"programId\": {\r",
					"                \"type\": \"integer\"\r",
					"                },\r",
					"                \"programName\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"programDescription\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"programStatus\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"creationTime\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"lastModTime\": {\r",
					"                \"type\": \"string\"\r",
					"                }\r",
					"            },\r",
					"            \"required\": [\r",
					"                \"programId\",\r",
					"                \"programName\",\r",
					"                \"programDescription\",\r",
					"                \"programStatus\",\r",
					"                \"creationTime\",\r",
					"                \"lastModTime\"\r",
					"            ]\r",
					"        }\r",
					"            pm.expect(pm.response.json()).to.have.jsonSchema(schema);\r",
					"        });\r",
					"    },\r",
					"\r",
					"    loginPostSchemaValidation: function() {\r",
					"        pm.test(\"Response schema is valid\", function () {\r",
					"        const schema = {\r",
					"    \"type\": \"object\",\r",
					"    \"properties\": {\r",
					"        \"token\": {\r",
					"        \"type\": \"string\"\r",
					"        },\r",
					"        \"type\": {\r",
					"        \"type\": \"string\"\r",
					"        },\r",
					"        \"userId\": {\r",
					"        \"type\": \"string\"\r",
					"        },\r",
					"        \"email\": {\r",
					"        \"type\": \"string\"\r",
					"        },\r",
					"        \"roles\": {\r",
					"        \"type\": \"array\",\r",
					"        \"items\": [\r",
					"            {\r",
					"            \"type\": \"string\"\r",
					"            }\r",
					"        ]\r",
					"        },\r",
					"        \"status\": {\r",
					"        \"type\": \"string\"\r",
					"        },\r",
					"        \"passwordExpired\": {\r",
					"        \"type\": \"boolean\"\r",
					"        }\r",
					"    },\r",
					"    \"required\": [\r",
					"        \"token\",\r",
					"        \"type\",\r",
					"        \"userId\",\r",
					"        \"email\",\r",
					"        \"roles\",\r",
					"        \"status\",\r",
					"        \"passwordExpired\"\r",
					"    ]\r",
					"    }\r",
					"                pm.expect(pm.response.json()).to.have.jsonSchema(schema);\r",
					"            });\r",
					"        },\r",
					"\r",
					"    batchPostPutSchemaValidation: function() {\r",
					"        pm.test(\"Response schema is valid\", function () {\r",
					"            const schema = {   \r",
					"                \"type\": \"object\",\r",
					"                \"properties\": {\r",
					"                \"batchId\": {\r",
					"                \"type\": \"integer\"\r",
					"                },\r",
					"                \"batchName\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"batchDescription\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"batchStatus\": {\r",
					"                \"type\": \"string\"\r",
					"                },\r",
					"                \"batchNoOfClasses\": {\r",
					"                \"type\": \"integer\"\r",
					"                },\r",
					"                \"programId\": {\r",
					"                \"type\": \"integer\"\r",
					"                },\r",
					"                \"programName\": {\r",
					"                \"type\": \"string\"\r",
					"                }\r",
					"            },\r",
					"            \"required\": [\r",
					"                \"batchId\",\r",
					"                \"batchName\",\r",
					"                \"batchDescription\",\r",
					"                \"batchStatus\",\r",
					"                \"batchNoOfClasses\",\r",
					"                \"programId\",\r",
					"                \"programName\"\r",
					"                ]\r",
					"            }\r",
					"        pm.expect(pm.response.json()).to.have.jsonSchema(schema);\r",
					"        });\r",
					"    }\r",
					"\r",
					"}\r",
					"\r",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "staffId",
			"value": "U37",
			"type": "string"
		},
		{
			"key": "studentId",
			"value": "U07",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "U57",
			"type": "string"
		}
	]
}