{
	"info": {
		"_postman_id": "da1d67c2-b685-48cd-8ce7-64de748e062e",
		"name": "Team2_API Commandos",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Data Driven",
			"item": [
				{
					"name": "UserLogin",
					"item": [
						{
							"name": "Admin Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae8d7c71-2e67-4086-a1c3-8d097bb3f7c6",
										"exec": [
											"const commonutils = pm.require('@gold-escape-779876/commonutils');\r",
											"\r",
											"bodyData = pm.response.json();\r",
											"TokenValue = bodyData.token;\r",
											"console.log(\"Token: \" + TokenValue)\r",
											"pm.globals.set(\"TokenValue\", TokenValue);\r",
											"\r",
											"// commonutils.setTokenFromResponse();\r",
											"\r",
											"pm.test('Verify user signed in', () => {\r",
											"    const response = pm.response.json();\r",
											"    pm.expect(response.token).to.eql(pm.globals.get('TokenValue'));\r",
											"});\r",
											"\r",
											"pm.test(`Verify userId is a number`, function () {\r",
											"    let bodyData = pm.response.json();\r",
											"    let key = 'userId';\r",
											"    pm.expect(bodyData).to.have.property(key);\r",
											"    pm.expect(bodyData[key]).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test('Verify Role is - ROLE_ADMIN', function () {\r",
											"    pm.expect(pm.response.text()).to.include('ROLE_ADMIN');\r",
											"});\r",
											"\r",
											"pm.test(`Status code is 200`, function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response Header Content-Type is application/json\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Response has Body or not\", function(){\r",
											"    pm.response.to.be.withBody;\r",
											"}); \r",
											"\r",
											"pm.test(\"Verify Response Body as JSON\", function(){\r",
											"    pm.response.to.be.json;\r",
											"    // pm.response.to.have.body({key:value});\r",
											"});   \r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"//Schema Validation\r",
											"const schema={\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"token\": { \"type\": \"string\" },\r",
											"    \"type\": { \"type\": \"string\" },\r",
											"    \"userId\": { \"type\": \"number\" },\r",
											"    \"loginUserEmail\": { \"type\": \"string\" },\r",
											"    \"roles\": { \"type\": \"array\" }\r",
											"  },\r",
											"  \"required\": [\"token\", \"type\", \"userId\", \"loginUserEmail\", \"roles\"]\r",
											"};\r",
											"\r",
											"pm.test(\"Schema - Validation Response contain valid response data - schema validation\", () => {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"// function getAdminToken(){\r",
											"//     bodyData = pm.response.json();\r",
											"//     TokenValue = bodyData.token;\r",
											"//     console.log(\"Token: \" + TokenValue);\r",
											"//     return TokenValue;\r",
											"// }\r",
											"// pm.collectionVariables.set(\"adminToken\", getAdminToken());\r",
											"//Validation\r",
											"\r",
											"\r",
											"// PostmanLegacy.setNextRequest('Create New Dietician');\r",
											"// pm.execution.setNextRequest('Create New Dietician Copy');\r",
											""
										],
										"type": "text/javascript",
										"packages": {
											"@gold-escape-779876/commonutils": {
												"id": "01930788-f01c-780c-9458-02c92a9caafe"
											}
										}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e2cc25f0-8b69-4f7b-a56c-0ccb258faf19",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7889e10e-84cd-45cc-9641-b600e90c308e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userLoginEmailId\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}login",
									"host": [
										"{{baseUrl}}login"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "f50cf764-461a-46c2-a319-8866f8ead544",
									"name": "admin Login",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"test\",\n  \"userLoginEmail\": \"Team6@gmail.com\"\n}\n\n\n\n\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/login",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"login"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1723106690&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=FCpchhkOvdlJSaQgPHC9O0KzTAvdwpW9fRgna1VvGQg%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1723106690&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=FCpchhkOvdlJSaQgPHC9O0KzTAvdwpW9fRgna1VvGQg%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Thu, 08 Aug 2024 08:44:50 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJUZWFtNkBnbWFpbC5jb20iLCJpYXQiOjE3MjMxMDY2OTAsImV4cCI6MTcyMzEzNTQ5MH0.WV-CLS9y0d88RBPwpK4NFIecR9Fckx5gvua3kJFa8baE3D8I4E2dCG6dgGm4Ss0shiPZfPA9sA9r-fvyhYVT2w\",\n    \"type\": \"Bearer \",\n    \"userId\": 7048,\n    \"loginUserEmail\": \"Team6@gmail.com\",\n    \"roles\": [\n        \"ROLE_ADMIN\"\n    ]\n}"
								}
							]
						}
					],
					"id": "3904f76b-f95c-48b0-99d8-d00eefa98c51"
				},
				{
					"name": "Program",
					"item": [
						{
							"name": "User with valid Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72b68a08-9e1e-4d6c-88c8-8b95b1a978cd",
										"exec": [
											"var responsedata = pm.response.json();\r",
											"var rprogramId = responsedata.programId;\r",
											"if(rprogramId) {\r",
											"    console.log(\"pgrmId\" + rprogramId);\r",
											"    pm.environment.set(\"pgrmId\", rprogramId);\r",
											"} else {\r",
											"    console.log(\"pgrmId not found in response\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4d3de0d3-6ccb-49ea-83a9-b21c76968286",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TokenValue}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"programDescription\": \"API Testing\",\r\n    \"programName\": \"CommandosAPITeam\",\r\n    \"programStatus\": \"Active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}saveprogram"
							},
							"response": []
						},
						{
							"name": "All Program",
							"id": "49558336-1809-4218-b3ae-2dd5a1dec453",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TokenValue}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}allPrograms"
							},
							"response": []
						},
						{
							"name": "All program with user",
							"id": "d3fb38be-1c3b-4d3d-b13a-61d7cb75891e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TokenValue}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}allProgramsWithUsers"
							},
							"response": []
						},
						{
							"name": "Program By ProgramId",
							"id": "dca9684e-4ed4-428c-80a9-3e6c90ebb055",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TokenValue}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}programs/16788"
							},
							"response": []
						},
						{
							"name": "Update Program By Program Name",
							"id": "ec8e42c5-ec38-40f9-8e96-ee8d29b1b470",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					],
					"id": "114341cc-a29f-4c9a-b35a-fa7fbf35d4c2"
				},
				{
					"name": "ProgramBatch",
					"item": [],
					"id": "e0eaffb0-edcf-4d9d-9f96-1f3348adaf4d"
				},
				{
					"name": "Class",
					"item": [],
					"id": "88bad502-b9f6-4436-8b20-776da1e0b360"
				},
				{
					"name": "ProgramBatchMapController",
					"item": [],
					"id": "5ee92f3d-ac17-4ab2-9db8-c30e7db4a214"
				},
				{
					"name": "Delete",
					"item": [],
					"id": "c7c00dcb-4d40-495d-82fd-5afb449024aa"
				}
			],
			"id": "e72d43c4-1b46-4fff-93b1-bc39d1bb680b"
		},
		{
			"name": "Negative Scenarios",
			"item": [
				{
					"name": "UserLogin",
					"item": [],
					"id": "64805ef9-625b-496b-954d-157af5a20a8e"
				},
				{
					"name": "Program",
					"item": [],
					"id": "1790cc56-a4e7-4940-8e5c-bab225a8c902"
				},
				{
					"name": "ProgramBatch",
					"item": [],
					"id": "174a2a49-b832-47aa-b437-379f52bbcab0"
				},
				{
					"name": "Class",
					"item": [],
					"id": "665c4893-d717-486f-82e1-5b412c77150d"
				},
				{
					"name": "ProgramBatchMapController",
					"item": [],
					"id": "da8e061d-237b-4a10-83fa-53c842c15ec4"
				},
				{
					"name": "Delete",
					"item": [],
					"id": "36a9244f-3419-4919-86c0-e46e96cc1fd9"
				}
			],
			"id": "33877c4f-0762-435a-87ff-d9211c68a4cb"
		},
		{
			"name": "Logout",
			"item": [],
			"id": "e4b46eb0-9252-462c-acbc-0eee36b2d8f1"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9bd46434-cee0-4563-a0e4-4ce7c3f0153f",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a94cbddd-8d31-414c-94b8-8a97c05f1b74",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}